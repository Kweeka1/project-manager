'use strict'

const req = require('./req.js')

/**
 * Plugin Loader
 *
 * @private
 * @method load
 *
 * @param  ***REMOVED***String***REMOVED*** plugin PostCSS Plugin Name
 * @param  ***REMOVED***Object***REMOVED*** options PostCSS Plugin Options
 *
 * @return ***REMOVED***Function***REMOVED*** PostCSS Plugin
 */
const load = (plugin, options, file) => ***REMOVED***
  try ***REMOVED***
    if (
      options === null ||
      options === undefined ||
      Object.keys(options).length === 0
    ) ***REMOVED***
      return req(plugin, file)
***REMOVED*** else ***REMOVED***
      return req(plugin, file)(options)
***REMOVED***
***REMOVED*** catch (err) ***REMOVED***
    throw new Error(`Loading PostCSS Plugin failed: $***REMOVED***err.message***REMOVED***\n\n(@$***REMOVED***file***REMOVED***)`)
***REMOVED***
***REMOVED***

/**
 * Load Plugins
 *
 * @private
 * @method plugins
 *
 * @param ***REMOVED***Object***REMOVED*** config PostCSS Config Plugins
 *
 * @return ***REMOVED***Array***REMOVED*** plugins PostCSS Plugins
 */
const plugins = (config, file) => ***REMOVED***
  let plugins = []

  if (Array.isArray(config.plugins)) ***REMOVED***
    plugins = config.plugins.filter(Boolean)
***REMOVED*** else ***REMOVED***
    plugins = Object.keys(config.plugins)
      .filter((plugin) => ***REMOVED***
        return config.plugins[plugin] !== false ? plugin : ''
  ***REMOVED***)
      .map((plugin) => ***REMOVED***
        return load(plugin, config.plugins[plugin], file)
  ***REMOVED***)
***REMOVED***

  if (plugins.length && plugins.length > 0) ***REMOVED***
    plugins.forEach((plugin, i) => ***REMOVED***
      if (plugin.default) ***REMOVED***
        plugin = plugin.default
  ***REMOVED***

      if (plugin.postcss === true) ***REMOVED***
        plugin = plugin()
  ***REMOVED*** else if (plugin.postcss) ***REMOVED***
        plugin = plugin.postcss
  ***REMOVED***

      if (
        // eslint-disable-next-line
        !(
          (typeof plugin === 'object' && Array.isArray(plugin.plugins)) ||
          (typeof plugin === 'object' && plugin.postcssPlugin) ||
          (typeof plugin === 'function')
        )
      ) ***REMOVED***
        throw new TypeError(`Invalid PostCSS Plugin found at: plugins[$***REMOVED***i***REMOVED***]\n\n(@$***REMOVED***file***REMOVED***)`)
  ***REMOVED***
***REMOVED***)
***REMOVED***

  return plugins
***REMOVED***

module.exports = plugins
