export function levenshtein(a, b) ***REMOVED***
    if (a.length === 0)
        return b.length;
    if (b.length === 0)
        return a.length;
    const matrix = [];
    let i;
    for (i = 0; i <= b.length; i++) ***REMOVED***
        matrix[i] = [i];
***REMOVED***
    let j;
    for (j = 0; j <= a.length; j++) ***REMOVED***
        matrix[0][j] = j;
***REMOVED***
    for (i = 1; i <= b.length; i++) ***REMOVED***
        for (j = 1; j <= a.length; j++) ***REMOVED***
            if (b.charAt(i - 1) === a.charAt(j - 1)) ***REMOVED***
                matrix[i][j] = matrix[i - 1][j - 1];
        ***REMOVED***
            else ***REMOVED***
                if (i > 1 &&
                    j > 1 &&
                    b.charAt(i - 2) === a.charAt(j - 1) &&
                    b.charAt(i - 1) === a.charAt(j - 2)) ***REMOVED***
                    matrix[i][j] = matrix[i - 2][j - 2] + 1;
            ***REMOVED***
                else ***REMOVED***
                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***
***REMOVED***
    return matrix[b.length][a.length];
***REMOVED***
