'use strict'

import ***REMOVED*** notStrictEqual, strictEqual ***REMOVED*** from 'assert'
import cliui from 'cliui'
import escalade from 'escalade/sync'
import ***REMOVED*** inspect ***REMOVED*** from 'util'
import ***REMOVED*** readFileSync ***REMOVED*** from 'fs'
import ***REMOVED*** fileURLToPath ***REMOVED*** from 'url';
import Parser from 'yargs-parser'
import ***REMOVED*** basename, dirname, extname, relative, resolve ***REMOVED*** from 'path'
import ***REMOVED*** getProcessArgvBin ***REMOVED*** from '../../build/lib/utils/process-argv.js'
import ***REMOVED*** YError ***REMOVED*** from '../../build/lib/yerror.js'
import y18n from 'y18n'

const REQUIRE_ERROR = 'require is not supported by ESM'
const REQUIRE_DIRECTORY_ERROR = 'loading a directory of commands is not supported yet for ESM'

let __dirname;
try ***REMOVED***
  __dirname = fileURLToPath(import.meta.url);
***REMOVED*** catch (e) ***REMOVED***
  __dirname = process.cwd();
***REMOVED***
const mainFilename = __dirname.substring(0, __dirname.lastIndexOf('node_modules'));

export default ***REMOVED***
  assert: ***REMOVED***
    notStrictEqual,
    strictEqual
***REMOVED***
  cliui,
  findUp: escalade,
  getEnv: (key) => ***REMOVED***
    return process.env[key]
***REMOVED***
  inspect,
  getCallerFile: () => ***REMOVED***
    throw new YError(REQUIRE_DIRECTORY_ERROR)
***REMOVED***
  getProcessArgvBin,
  mainFilename: mainFilename || process.cwd(),
  Parser,
  path: ***REMOVED***
    basename,
    dirname,
    extname,
    relative,
    resolve
***REMOVED***
  process: ***REMOVED***
    argv: () => process.argv,
    cwd: process.cwd,
    emitWarning: (warning, type) => process.emitWarning(warning, type),
    execPath: () => process.execPath,
    exit: process.exit,
    nextTick: process.nextTick,
    stdColumns: typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null
***REMOVED***
  readFileSync,
  require: () => ***REMOVED***
    throw new YError(REQUIRE_ERROR)
***REMOVED***
  requireDirectory: () => ***REMOVED***
    throw new YError(REQUIRE_DIRECTORY_ERROR)
***REMOVED***
  stringWidth: (str) => ***REMOVED***
    return [...str].length
***REMOVED***
  y18n: y18n(***REMOVED***
    directory: resolve(__dirname, '../../../locales'),
    updateFiles: false
***REMOVED***)
***REMOVED***
