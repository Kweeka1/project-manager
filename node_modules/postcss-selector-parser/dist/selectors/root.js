"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _container = _interopRequireDefault(require("./container"));

var _types = require("./types");

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** "default": obj ***REMOVED***; ***REMOVED***

function _defineProperties(target, props) ***REMOVED*** for (var i = 0; i < props.length; i++) ***REMOVED*** var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); ***REMOVED*** ***REMOVED***

function _createClass(Constructor, protoProps, staticProps) ***REMOVED*** if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; ***REMOVED***

function _inheritsLoose(subClass, superClass) ***REMOVED*** subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); ***REMOVED***

function _setPrototypeOf(o, p) ***REMOVED*** _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) ***REMOVED*** o.__proto__ = p; return o; ***REMOVED***; return _setPrototypeOf(o, p); ***REMOVED***

var Root = /*#__PURE__*/function (_Container) ***REMOVED***
  _inheritsLoose(Root, _Container);

  function Root(opts) ***REMOVED***
    var _this;

    _this = _Container.call(this, opts) || this;
    _this.type = _types.ROOT;
    return _this;
***REMOVED***

  var _proto = Root.prototype;

  _proto.toString = function toString() ***REMOVED***
    var str = this.reduce(function (memo, selector) ***REMOVED***
      memo.push(String(selector));
      return memo;
***REMOVED***, []).join(',');
    return this.trailingComma ? str + ',' : str;
***REMOVED***;

  _proto.error = function error(message, options) ***REMOVED***
    if (this._error) ***REMOVED***
      return this._error(message, options);
***REMOVED*** else ***REMOVED***
      return new Error(message);
***REMOVED***
***REMOVED***;

  _createClass(Root, [***REMOVED***
    key: "errorGenerator",
    set: function set(handler) ***REMOVED***
      this._error = handler;
***REMOVED***
***REMOVED***]);

  return Root;
***REMOVED***(_container["default"]);

exports["default"] = Root;
module.exports = exports.default;