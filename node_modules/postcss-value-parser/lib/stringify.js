function stringifyNode(node, custom) ***REMOVED***
  var type = node.type;
  var value = node.value;
  var buf;
  var customResult;

  if (custom && (customResult = custom(node)) !== undefined) ***REMOVED***
    return customResult;
***REMOVED*** else if (type === "word" || type === "space") ***REMOVED***
    return value;
***REMOVED*** else if (type === "string") ***REMOVED***
    buf = node.quote || "";
    return buf + value + (node.unclosed ? "" : buf);
***REMOVED*** else if (type === "comment") ***REMOVED***
    return "/*" + value + (node.unclosed ? "" : "*/");
***REMOVED*** else if (type === "div") ***REMOVED***
    return (node.before || "") + value + (node.after || "");
***REMOVED*** else if (Array.isArray(node.nodes)) ***REMOVED***
    buf = stringify(node.nodes, custom);
    if (type !== "function") ***REMOVED***
      return buf;
***REMOVED***
    return (
      value +
      "(" +
      (node.before || "") +
      buf +
      (node.after || "") +
      (node.unclosed ? "" : ")")
    );
***REMOVED***
  return value;
***REMOVED***

function stringify(nodes, custom) ***REMOVED***
  var result, i;

  if (Array.isArray(nodes)) ***REMOVED***
    result = "";
    for (i = nodes.length - 1; ~i; i -= 1) ***REMOVED***
      result = stringifyNode(nodes[i], custom) + result;
***REMOVED***
    return result;
***REMOVED***
  return stringifyNode(nodes, custom);
***REMOVED***

module.exports = stringify;
