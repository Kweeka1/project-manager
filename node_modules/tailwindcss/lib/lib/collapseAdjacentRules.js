"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.default = collapseAdjacentRules;
function collapseAdjacentRules() ***REMOVED***
    function collapseRulesIn(root) ***REMOVED***
        let currentRule = null;
        root.each((node)=>***REMOVED***
            if (!types.has(node.type)) ***REMOVED***
                currentRule = null;
                return;
        ***REMOVED***
            if (currentRule === null) ***REMOVED***
                currentRule = node;
                return;
        ***REMOVED***
            let properties = comparisonMap[node.type];
            var _property, _property1;
            if (node.type === "atrule" && node.name === "font-face") ***REMOVED***
                currentRule = node;
        ***REMOVED*** else if (properties.every((property)=>((_property = node[property]) !== null && _property !== void 0 ? _property : "").replace(/\s+/g, " ") === ((_property1 = currentRule[property]) !== null && _property1 !== void 0 ? _property1 : "").replace(/\s+/g, " ")
            )) ***REMOVED***
                currentRule.append(node.nodes);
                node.remove();
        ***REMOVED*** else ***REMOVED***
                currentRule = node;
        ***REMOVED***
    ***REMOVED***);
        // After we've collapsed adjacent rules & at-rules, we need to collapse
        // adjacent rules & at-rules that are children of at-rules.
        // We do not care about nesting rules because Tailwind CSS
        // explicitly does not handle rule nesting on its own as
        // the user is expected to use a nesting plugin
        root.each((node)=>***REMOVED***
            if (node.type === "atrule") ***REMOVED***
                collapseRulesIn(node);
        ***REMOVED***
    ***REMOVED***);
***REMOVED***
    return (root)=>***REMOVED***
        collapseRulesIn(root);
***REMOVED***;
***REMOVED***
let comparisonMap = ***REMOVED***
    atrule: [
        "name",
        "params"
    ],
    rule: [
        "selector"
    ]
***REMOVED***;
let types = new Set(Object.keys(comparisonMap));
