"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.default = getModuleDependencies;
var _fs = _interopRequireDefault(require("fs"));
var _path = _interopRequireDefault(require("path"));
var _resolve = _interopRequireDefault(require("resolve"));
var _detective = _interopRequireDefault(require("detective"));
function getModuleDependencies(entryFile) ***REMOVED***
    const rootModule = createModule(entryFile);
    const modules = [
        rootModule
    ];
    // Iterate over the modules, even when new
    // ones are being added
    for (const mdl of modules)***REMOVED***
        mdl.requires.filter((dep)=>***REMOVED***
            // Only track local modules, not node_modules
            return dep.startsWith("./") || dep.startsWith("../");
    ***REMOVED***).forEach((dep)=>***REMOVED***
            try ***REMOVED***
                const basedir = _path.default.dirname(mdl.file);
                const depPath = _resolve.default.sync(dep, ***REMOVED***
                    basedir
            ***REMOVED***);
                const depModule = createModule(depPath);
                modules.push(depModule);
        ***REMOVED*** catch (_err) ***REMOVED***
            // eslint-disable-next-line no-empty
        ***REMOVED***
    ***REMOVED***);
***REMOVED***
    return modules;
***REMOVED***
function _interopRequireDefault(obj) ***REMOVED***
    return obj && obj.__esModule ? obj : ***REMOVED***
        default: obj
***REMOVED***;
***REMOVED***
function createModule(file) ***REMOVED***
    const source = _fs.default.readFileSync(file, "utf-8");
    const requires = (0, _detective).default(source);
    return ***REMOVED***
        file,
        requires
***REMOVED***;
***REMOVED***
