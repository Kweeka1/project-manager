"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.default = _default;
function _default(_context) ***REMOVED***
    return (root, result)=>***REMOVED***
        let found = false;
        root.walkAtRules("tailwind", (node)=>***REMOVED***
            if (found) return false;
            if (node.parent && node.parent.type !== "root") ***REMOVED***
                found = true;
                node.warn(result, [
                    "Nested @tailwind rules were detected, but are not supported.",
                    "Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix",
                    "Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy", 
                ].join("\n"));
                return false;
        ***REMOVED***
    ***REMOVED***);
        root.walkRules((rule)=>***REMOVED***
            if (found) return false;
            rule.walkRules((nestedRule)=>***REMOVED***
                found = true;
                nestedRule.warn(result, [
                    "Nested CSS was detected, but CSS nesting has not been configured correctly.",
                    "Please enable a CSS nesting plugin *before* Tailwind in your configuration.",
                    "See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting", 
                ].join("\n"));
                return false;
        ***REMOVED***);
    ***REMOVED***);
***REMOVED***;
***REMOVED***
