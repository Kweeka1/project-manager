"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.default = parseDependency;
var _isGlob = _interopRequireDefault(require("is-glob"));
var _globParent = _interopRequireDefault(require("glob-parent"));
var _path = _interopRequireDefault(require("path"));
function parseDependency(normalizedFileOrGlob) ***REMOVED***
    if (normalizedFileOrGlob.startsWith("!")) ***REMOVED***
        return null;
***REMOVED***
    let message;
    if ((0, _isGlob).default(normalizedFileOrGlob)) ***REMOVED***
        let ***REMOVED*** base , glob***REMOVED*** = parseGlob(normalizedFileOrGlob);
        message = ***REMOVED***
            type: "dir-dependency",
            dir: _path.default.resolve(base),
            glob
    ***REMOVED***;
***REMOVED*** else ***REMOVED***
        message = ***REMOVED***
            type: "dependency",
            file: _path.default.resolve(normalizedFileOrGlob)
    ***REMOVED***;
***REMOVED***
    // rollup-plugin-postcss does not support dir-dependency messages
    // but directories can be watched in the same way as files
    if (message.type === "dir-dependency" && process.env.ROLLUP_WATCH === "true") ***REMOVED***
        message = ***REMOVED***
            type: "dependency",
            file: message.dir
    ***REMOVED***;
***REMOVED***
    return message;
***REMOVED***
function _interopRequireDefault(obj) ***REMOVED***
    return obj && obj.__esModule ? obj : ***REMOVED***
        default: obj
***REMOVED***;
***REMOVED***
// Based on `glob-base`
// https://github.com/micromatch/glob-base/blob/master/index.js
function parseGlob(pattern) ***REMOVED***
    let glob = pattern;
    let base = (0, _globParent).default(pattern);
    if (base !== ".") ***REMOVED***
        glob = pattern.substr(base.length);
        if (glob.charAt(0) === "/") ***REMOVED***
            glob = glob.substr(1);
    ***REMOVED***
***REMOVED***
    if (glob.substr(0, 2) === "./") ***REMOVED***
        glob = glob.substr(2);
***REMOVED***
    if (glob.charAt(0) === "/") ***REMOVED***
        glob = glob.substr(1);
***REMOVED***
    return ***REMOVED***
        base,
        glob
***REMOVED***;
***REMOVED***
