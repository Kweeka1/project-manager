"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.default = withAlphaVariable;
exports.withAlphaValue = withAlphaValue;
var _color = require("./color");
function withAlphaVariable(***REMOVED*** color , property , variable***REMOVED***) ***REMOVED***
    let properties = [].concat(property);
    if (typeof color === "function") ***REMOVED***
        return ***REMOVED***
            [variable]: "1",
            ...Object.fromEntries(properties.map((p)=>***REMOVED***
                return [
                    p,
                    color(***REMOVED***
                        opacityVariable: variable,
                        opacityValue: `var($***REMOVED***variable***REMOVED***)`
                ***REMOVED***)
                ];
        ***REMOVED***))
    ***REMOVED***;
***REMOVED***
    const parsed = (0, _color).parseColor(color);
    if (parsed === null) ***REMOVED***
        return Object.fromEntries(properties.map((p)=>[
                p,
                color
            ]
        ));
***REMOVED***
    if (parsed.alpha !== undefined) ***REMOVED***
        // Has an alpha value, return color as-is
        return Object.fromEntries(properties.map((p)=>[
                p,
                color
            ]
        ));
***REMOVED***
    return ***REMOVED***
        [variable]: "1",
        ...Object.fromEntries(properties.map((p)=>***REMOVED***
            return [
                p,
                (0, _color).formatColor(***REMOVED***
                    ...parsed,
                    alpha: `var($***REMOVED***variable***REMOVED***)`
            ***REMOVED***)
            ];
    ***REMOVED***))
***REMOVED***;
***REMOVED***
function withAlphaValue(color, alphaValue, defaultValue) ***REMOVED***
    if (typeof color === "function") ***REMOVED***
        return color(***REMOVED***
            opacityValue: alphaValue
    ***REMOVED***);
***REMOVED***
    let parsed = (0, _color).parseColor(color);
    if (parsed === null) ***REMOVED***
        return defaultValue;
***REMOVED***
    return (0, _color).formatColor(***REMOVED***
        ...parsed,
        alpha: alphaValue
***REMOVED***);
***REMOVED***
