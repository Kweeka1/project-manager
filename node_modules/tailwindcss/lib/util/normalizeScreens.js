"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.normalizeScreens = normalizeScreens;
function normalizeScreens(screens, root = true) ***REMOVED***
    if (Array.isArray(screens)) ***REMOVED***
        return screens.map((screen)=>***REMOVED***
            if (root && Array.isArray(screen)) ***REMOVED***
                throw new Error("The tuple syntax is not supported for `screens`.");
        ***REMOVED***
            if (typeof screen === "string") ***REMOVED***
                return ***REMOVED***
                    name: screen.toString(),
                    values: [
                        ***REMOVED***
                            min: screen,
                            max: undefined
                    ***REMOVED***
                    ]
            ***REMOVED***;
        ***REMOVED***
            let [name, options] = screen;
            name = name.toString();
            if (typeof options === "string") ***REMOVED***
                return ***REMOVED***
                    name,
                    values: [
                        ***REMOVED***
                            min: options,
                            max: undefined
                    ***REMOVED***
                    ]
            ***REMOVED***;
        ***REMOVED***
            if (Array.isArray(options)) ***REMOVED***
                return ***REMOVED***
                    name,
                    values: options.map((option)=>resolveValue(option)
                    )
            ***REMOVED***;
        ***REMOVED***
            return ***REMOVED***
                name,
                values: [
                    resolveValue(options)
                ]
        ***REMOVED***;
    ***REMOVED***);
***REMOVED***
    return normalizeScreens(Object.entries(screens !== null && screens !== void 0 ? screens : ***REMOVED******REMOVED***), false);
***REMOVED***
function resolveValue(***REMOVED*** "min-width": _minWidth , min =_minWidth , max , raw***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***
    return ***REMOVED***
        min,
        max,
        raw
***REMOVED***;
***REMOVED***
