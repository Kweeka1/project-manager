"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED***
    value: true
***REMOVED***);
exports.corePlugins = exports.variantPlugins = void 0;
var _fs = _interopRequireDefault(require("fs"));
var path = _interopRequireWildcard(require("path"));
var _postcss = _interopRequireDefault(require("postcss"));
var _createUtilityPlugin = _interopRequireDefault(require("./util/createUtilityPlugin"));
var _buildMediaQuery = _interopRequireDefault(require("./util/buildMediaQuery"));
var _escapeClassName = _interopRequireDefault(require("./util/escapeClassName"));
var _parseAnimationValue = _interopRequireDefault(require("./util/parseAnimationValue"));
var _flattenColorPalette = _interopRequireDefault(require("./util/flattenColorPalette"));
var _withAlphaVariable = _interopRequireWildcard(require("./util/withAlphaVariable"));
var _toColorValue = _interopRequireDefault(require("./util/toColorValue"));
var _isPlainObject = _interopRequireDefault(require("./util/isPlainObject"));
var _transformThemeValue = _interopRequireDefault(require("./util/transformThemeValue"));
var _packageJson = require("../package.json");
var _log = _interopRequireDefault(require("./util/log"));
var _normalizeScreens = require("./util/normalizeScreens");
var _parseBoxShadowValue = require("./util/parseBoxShadowValue");
function _interopRequireDefault(obj) ***REMOVED***
    return obj && obj.__esModule ? obj : ***REMOVED***
        default: obj
***REMOVED***;
***REMOVED***
function _interopRequireWildcard(obj) ***REMOVED***
    if (obj && obj.__esModule) ***REMOVED***
        return obj;
***REMOVED*** else ***REMOVED***
        var newObj = ***REMOVED******REMOVED***;
        if (obj != null) ***REMOVED***
            for(var key in obj)***REMOVED***
                if (Object.prototype.hasOwnProperty.call(obj, key)) ***REMOVED***
                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : ***REMOVED******REMOVED***;
                    if (desc.get || desc.set) ***REMOVED***
                        Object.defineProperty(newObj, key, desc);
                ***REMOVED*** else ***REMOVED***
                        newObj[key] = obj[key];
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***
        newObj.default = obj;
        return newObj;
***REMOVED***
***REMOVED***
let variantPlugins = ***REMOVED***
    pseudoElementVariants: (***REMOVED*** addVariant***REMOVED***)=>***REMOVED***
        addVariant("first-letter", "&::first-letter");
        addVariant("first-line", "&::first-line");
        addVariant("marker", [
            "& *::marker",
            "&::marker"
        ]);
        addVariant("selection", [
            "& *::selection",
            "&::selection"
        ]);
        addVariant("file", "&::file-selector-button");
        addVariant("placeholder", "&::placeholder");
        /*
    addVariant('backdrop', '&::backdrop')
    */ addVariant("before", (***REMOVED*** container***REMOVED***)=>***REMOVED***
            container.walkRules((rule)=>***REMOVED***
                let foundContent = false;
                rule.walkDecls("content", ()=>***REMOVED***
                    foundContent = true;
            ***REMOVED***);
                if (!foundContent) ***REMOVED***
                    rule.prepend(_postcss.default.decl(***REMOVED***
                        prop: "content",
                        value: "var(--tw-content)"
                ***REMOVED***));
            ***REMOVED***
        ***REMOVED***);
            return "&::before";
    ***REMOVED***);
        addVariant("after", (***REMOVED*** container***REMOVED***)=>***REMOVED***
            container.walkRules((rule)=>***REMOVED***
                let foundContent = false;
                rule.walkDecls("content", ()=>***REMOVED***
                    foundContent = true;
            ***REMOVED***);
                if (!foundContent) ***REMOVED***
                    rule.prepend(_postcss.default.decl(***REMOVED***
                        prop: "content",
                        value: "var(--tw-content)"
                ***REMOVED***));
            ***REMOVED***
        ***REMOVED***);
            return "&::after";
    ***REMOVED***);
***REMOVED***,
    pseudoClassVariants: (***REMOVED*** addVariant***REMOVED***)=>***REMOVED***
        let pseudoVariants = [
            // Positional
            [
                "first",
                ":first-child"
            ],
            [
                "last",
                ":last-child"
            ],
            [
                "only",
                ":only-child"
            ],
            [
                "odd",
                ":nth-child(odd)"
            ],
            [
                "even",
                ":nth-child(even)"
            ],
            "first-of-type",
            "last-of-type",
            "only-of-type",
            // State
            [
                "visited",
                (***REMOVED*** container***REMOVED***)=>***REMOVED***
                    let toRemove = [
                        "--tw-text-opacity",
                        "--tw-border-opacity",
                        "--tw-bg-opacity"
                    ];
                    container.walkDecls((decl)=>***REMOVED***
                        if (toRemove.includes(decl.prop)) ***REMOVED***
                            decl.remove();
                            return;
                    ***REMOVED***
                        for (const varName of toRemove)***REMOVED***
                            if (decl.value.includes(`/ var($***REMOVED***varName***REMOVED***)`)) ***REMOVED***
                                decl.value = decl.value.replace(`/ var($***REMOVED***varName***REMOVED***)`, "");
                        ***REMOVED***
                    ***REMOVED***
                ***REMOVED***);
                    return ":visited";
            ***REMOVED***, 
            ],
            "target",
            [
                "open",
                "[open]"
            ],
            // Forms
            "default",
            "checked",
            "indeterminate",
            "placeholder-shown",
            "autofill",
            "required",
            "valid",
            "invalid",
            "in-range",
            "out-of-range",
            "read-only",
            // Content
            "empty",
            // Interactive
            "focus-within",
            "hover",
            "focus",
            "focus-visible",
            "active",
            /*
      'enabled',
      */ "disabled", 
        ].map((variant)=>Array.isArray(variant) ? variant : [
                variant,
                `:$***REMOVED***variant***REMOVED***`
            ]
        );
        for (let [variantName, state] of pseudoVariants)***REMOVED***
            addVariant(variantName, (ctx)=>***REMOVED***
                let result = typeof state === "function" ? state(ctx) : state;
                return `&$***REMOVED***result***REMOVED***`;
        ***REMOVED***);
    ***REMOVED***
        for (let [variantName1, state1] of pseudoVariants)***REMOVED***
            addVariant(`group-$***REMOVED***variantName1***REMOVED***`, (ctx)=>***REMOVED***
                let result = typeof state1 === "function" ? state1(ctx) : state1;
                return `:merge(.group)$***REMOVED***result***REMOVED*** &`;
        ***REMOVED***);
    ***REMOVED***
        for (let [variantName2, state2] of pseudoVariants)***REMOVED***
            addVariant(`peer-$***REMOVED***variantName2***REMOVED***`, (ctx)=>***REMOVED***
                let result = typeof state2 === "function" ? state2(ctx) : state2;
                return `:merge(.peer)$***REMOVED***result***REMOVED*** ~ &`;
        ***REMOVED***);
    ***REMOVED***
***REMOVED***,
    directionVariants: (***REMOVED*** addVariant***REMOVED***)=>***REMOVED***
        addVariant("ltr", ()=>***REMOVED***
            _log.default.warn("rtl-experimental", [
                "The RTL features in Tailwind CSS are currently in preview.",
                "Preview features are not covered by semver, and may be improved in breaking ways at any time.", 
            ]);
            return '[dir="ltr"] &';
    ***REMOVED***);
        addVariant("rtl", ()=>***REMOVED***
            _log.default.warn("rtl-experimental", [
                "The RTL features in Tailwind CSS are currently in preview.",
                "Preview features are not covered by semver, and may be improved in breaking ways at any time.", 
            ]);
            return '[dir="rtl"] &';
    ***REMOVED***);
***REMOVED***,
    reducedMotionVariants: (***REMOVED*** addVariant***REMOVED***)=>***REMOVED***
        addVariant("motion-safe", "@media (prefers-reduced-motion: no-preference)");
        addVariant("motion-reduce", "@media (prefers-reduced-motion: reduce)");
***REMOVED***,
    darkVariants: (***REMOVED*** config , addVariant***REMOVED***)=>***REMOVED***
        let [mode] = [].concat(config("darkMode", "media"));
        if (mode === false) ***REMOVED***
            mode = "media";
            _log.default.warn("darkmode-false", [
                "The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.",
                "Change `darkMode` to `media` or remove it entirely.",
                "https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration", 
            ]);
    ***REMOVED***
        if (mode === "class") ***REMOVED***
            addVariant("dark", `.dark &`);
        /*
      addVariant('dark', `$***REMOVED***className***REMOVED*** &`)
      */ ***REMOVED*** else if (mode === "media") ***REMOVED***
            addVariant("dark", "@media (prefers-color-scheme: dark)");
    ***REMOVED***
***REMOVED***,
    printVariant: (***REMOVED*** addVariant***REMOVED***)=>***REMOVED***
        addVariant("print", "@media print");
***REMOVED***,
    screenVariants: (***REMOVED*** theme , addVariant***REMOVED***)=>***REMOVED***
        for (let screen of (0, _normalizeScreens).normalizeScreens(theme("screens")))***REMOVED***
            let query = (0, _buildMediaQuery).default(screen);
            addVariant(screen.name, `@media $***REMOVED***query***REMOVED***`);
    ***REMOVED***
***REMOVED***,
    orientationVariants: (***REMOVED*** addVariant***REMOVED***)=>***REMOVED***
        addVariant("portrait", "@media (orientation: portrait)");
        addVariant("landscape", "@media (orientation: landscape)");
***REMOVED***
***REMOVED***;
exports.variantPlugins = variantPlugins;
let cssTransformValue = [
    "translate(var(--tw-translate-x), var(--tw-translate-y))",
    "rotate(var(--tw-rotate))",
    "skewX(var(--tw-skew-x))",
    "skewY(var(--tw-skew-y))",
    "scaleX(var(--tw-scale-x))",
    "scaleY(var(--tw-scale-y))", 
].join(" ");
let cssFilterValue = [
    "var(--tw-blur)",
    "var(--tw-brightness)",
    "var(--tw-contrast)",
    "var(--tw-grayscale)",
    "var(--tw-hue-rotate)",
    "var(--tw-invert)",
    "var(--tw-saturate)",
    "var(--tw-sepia)",
    "var(--tw-drop-shadow)", 
].join(" ");
let cssBackdropFilterValue = [
    "var(--tw-backdrop-blur)",
    "var(--tw-backdrop-brightness)",
    "var(--tw-backdrop-contrast)",
    "var(--tw-backdrop-grayscale)",
    "var(--tw-backdrop-hue-rotate)",
    "var(--tw-backdrop-invert)",
    "var(--tw-backdrop-opacity)",
    "var(--tw-backdrop-saturate)",
    "var(--tw-backdrop-sepia)", 
].join(" ");
let corePlugins = ***REMOVED***
    preflight: (***REMOVED*** addBase***REMOVED***)=>***REMOVED***
        let preflightStyles = _postcss.default.parse(_fs.default.readFileSync(path.join(__dirname, "./css/preflight.css"), "utf8"));
        addBase([
            _postcss.default.comment(***REMOVED***
                text: `! tailwindcss v$***REMOVED***_packageJson.version***REMOVED*** | MIT License | https://tailwindcss.com`
        ***REMOVED***),
            ...preflightStyles.nodes, 
        ]);
***REMOVED***,
    container: (()=>***REMOVED***
        function extractMinWidths(breakpoints = []) ***REMOVED***
            return breakpoints.flatMap((breakpoint1)=>breakpoint1.values.map((breakpoint)=>breakpoint.min
                )
            ).filter((v)=>v !== undefined
            );
    ***REMOVED***
        function mapMinWidthsToPadding(minWidths, screens, paddings) ***REMOVED***
            if (typeof paddings === "undefined") ***REMOVED***
                return [];
        ***REMOVED***
            if (!(typeof paddings === "object" && paddings !== null)) ***REMOVED***
                return [
                    ***REMOVED***
                        screen: "DEFAULT",
                        minWidth: 0,
                        padding: paddings
                ***REMOVED***, 
                ];
        ***REMOVED***
            let mapping = [];
            if (paddings.DEFAULT) ***REMOVED***
                mapping.push(***REMOVED***
                    screen: "DEFAULT",
                    minWidth: 0,
                    padding: paddings.DEFAULT
            ***REMOVED***);
        ***REMOVED***
            for (let minWidth of minWidths)***REMOVED***
                for (let screen of screens)***REMOVED***
                    for (let ***REMOVED*** min***REMOVED*** of screen.values)***REMOVED***
                        if (min === minWidth) ***REMOVED***
                            mapping.push(***REMOVED***
                                minWidth,
                                padding: paddings[screen.name]
                        ***REMOVED***);
                    ***REMOVED***
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***
            return mapping;
    ***REMOVED***
        return function(***REMOVED*** addComponents , theme***REMOVED***) ***REMOVED***
            let screens = (0, _normalizeScreens).normalizeScreens(theme("container.screens", theme("screens")));
            let minWidths = extractMinWidths(screens);
            let paddings = mapMinWidthsToPadding(minWidths, screens, theme("container.padding"));
            let generatePaddingFor = (minWidth)=>***REMOVED***
                let paddingConfig = paddings.find((padding)=>padding.minWidth === minWidth
                );
                if (!paddingConfig) ***REMOVED***
                    return ***REMOVED******REMOVED***;
            ***REMOVED***
                return ***REMOVED***
                    paddingRight: paddingConfig.padding,
                    paddingLeft: paddingConfig.padding
            ***REMOVED***;
        ***REMOVED***;
            let atRules = Array.from(new Set(minWidths.slice().sort((a, z)=>parseInt(a) - parseInt(z)
            ))).map((minWidth)=>(***REMOVED***
                    [`@media (min-width: $***REMOVED***minWidth***REMOVED***)`]: ***REMOVED***
                        ".container": ***REMOVED***
                            "max-width": minWidth,
                            ...generatePaddingFor(minWidth)
                    ***REMOVED***
                ***REMOVED***
            ***REMOVED***)
            );
            addComponents([
                ***REMOVED***
                    ".container": Object.assign(***REMOVED***
                        width: "100%"
                ***REMOVED***, theme("container.center", false) ? ***REMOVED***
                        marginRight: "auto",
                        marginLeft: "auto"
                ***REMOVED*** : ***REMOVED******REMOVED***, generatePaddingFor(0))
            ***REMOVED***,
                ...atRules, 
            ]);
    ***REMOVED***;
***REMOVED***)(),
    accessibility: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".sr-only": ***REMOVED***
                position: "absolute",
                width: "1px",
                height: "1px",
                padding: "0",
                margin: "-1px",
                overflow: "hidden",
                clip: "rect(0, 0, 0, 0)",
                whiteSpace: "nowrap",
                borderWidth: "0"
        ***REMOVED***,
            ".not-sr-only": ***REMOVED***
                position: "static",
                width: "auto",
                height: "auto",
                padding: "0",
                margin: "0",
                overflow: "visible",
                clip: "auto",
                whiteSpace: "normal"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    pointerEvents: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".pointer-events-none": ***REMOVED***
                "pointer-events": "none"
        ***REMOVED***,
            ".pointer-events-auto": ***REMOVED***
                "pointer-events": "auto"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    visibility: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".visible": ***REMOVED***
                visibility: "visible"
        ***REMOVED***,
            ".invisible": ***REMOVED***
                visibility: "hidden"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    position: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".static": ***REMOVED***
                position: "static"
        ***REMOVED***,
            ".fixed": ***REMOVED***
                position: "fixed"
        ***REMOVED***,
            ".absolute": ***REMOVED***
                position: "absolute"
        ***REMOVED***,
            ".relative": ***REMOVED***
                position: "relative"
        ***REMOVED***,
            ".sticky": ***REMOVED***
                position: "sticky"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    inset: (0, _createUtilityPlugin).default("inset", [
        [
            "inset",
            [
                "top",
                "right",
                "bottom",
                "left"
            ]
        ],
        [
            [
                "inset-x",
                [
                    "left",
                    "right"
                ]
            ],
            [
                "inset-y",
                [
                    "top",
                    "bottom"
                ]
            ], 
        ],
        [
            [
                "top",
                [
                    "top"
                ]
            ],
            [
                "right",
                [
                    "right"
                ]
            ],
            [
                "bottom",
                [
                    "bottom"
                ]
            ],
            [
                "left",
                [
                    "left"
                ]
            ], 
        ], 
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    isolation: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".isolate": ***REMOVED***
                isolation: "isolate"
        ***REMOVED***,
            ".isolation-auto": ***REMOVED***
                isolation: "auto"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    zIndex: (0, _createUtilityPlugin).default("zIndex", [
        [
            "z",
            [
                "zIndex"
            ]
        ]
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    order: (0, _createUtilityPlugin).default("order", undefined, ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    gridColumn: (0, _createUtilityPlugin).default("gridColumn", [
        [
            "col",
            [
                "gridColumn"
            ]
        ]
    ]),
    gridColumnStart: (0, _createUtilityPlugin).default("gridColumnStart", [
        [
            "col-start",
            [
                "gridColumnStart"
            ]
        ]
    ]),
    gridColumnEnd: (0, _createUtilityPlugin).default("gridColumnEnd", [
        [
            "col-end",
            [
                "gridColumnEnd"
            ]
        ]
    ]),
    gridRow: (0, _createUtilityPlugin).default("gridRow", [
        [
            "row",
            [
                "gridRow"
            ]
        ]
    ]),
    gridRowStart: (0, _createUtilityPlugin).default("gridRowStart", [
        [
            "row-start",
            [
                "gridRowStart"
            ]
        ]
    ]),
    gridRowEnd: (0, _createUtilityPlugin).default("gridRowEnd", [
        [
            "row-end",
            [
                "gridRowEnd"
            ]
        ]
    ]),
    float: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".float-right": ***REMOVED***
                float: "right"
        ***REMOVED***,
            ".float-left": ***REMOVED***
                float: "left"
        ***REMOVED***,
            ".float-none": ***REMOVED***
                float: "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    clear: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".clear-left": ***REMOVED***
                clear: "left"
        ***REMOVED***,
            ".clear-right": ***REMOVED***
                clear: "right"
        ***REMOVED***,
            ".clear-both": ***REMOVED***
                clear: "both"
        ***REMOVED***,
            ".clear-none": ***REMOVED***
                clear: "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    margin: (0, _createUtilityPlugin).default("margin", [
        [
            "m",
            [
                "margin"
            ]
        ],
        [
            [
                "mx",
                [
                    "margin-left",
                    "margin-right"
                ]
            ],
            [
                "my",
                [
                    "margin-top",
                    "margin-bottom"
                ]
            ], 
        ],
        [
            [
                "mt",
                [
                    "margin-top"
                ]
            ],
            [
                "mr",
                [
                    "margin-right"
                ]
            ],
            [
                "mb",
                [
                    "margin-bottom"
                ]
            ],
            [
                "ml",
                [
                    "margin-left"
                ]
            ], 
        ], 
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    boxSizing: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".box-border": ***REMOVED***
                "box-sizing": "border-box"
        ***REMOVED***,
            ".box-content": ***REMOVED***
                "box-sizing": "content-box"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    display: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".block": ***REMOVED***
                display: "block"
        ***REMOVED***,
            ".inline-block": ***REMOVED***
                display: "inline-block"
        ***REMOVED***,
            ".inline": ***REMOVED***
                display: "inline"
        ***REMOVED***,
            ".flex": ***REMOVED***
                display: "flex"
        ***REMOVED***,
            ".inline-flex": ***REMOVED***
                display: "inline-flex"
        ***REMOVED***,
            ".table": ***REMOVED***
                display: "table"
        ***REMOVED***,
            ".inline-table": ***REMOVED***
                display: "inline-table"
        ***REMOVED***,
            ".table-caption": ***REMOVED***
                display: "table-caption"
        ***REMOVED***,
            ".table-cell": ***REMOVED***
                display: "table-cell"
        ***REMOVED***,
            ".table-column": ***REMOVED***
                display: "table-column"
        ***REMOVED***,
            ".table-column-group": ***REMOVED***
                display: "table-column-group"
        ***REMOVED***,
            ".table-footer-group": ***REMOVED***
                display: "table-footer-group"
        ***REMOVED***,
            ".table-header-group": ***REMOVED***
                display: "table-header-group"
        ***REMOVED***,
            ".table-row-group": ***REMOVED***
                display: "table-row-group"
        ***REMOVED***,
            ".table-row": ***REMOVED***
                display: "table-row"
        ***REMOVED***,
            ".flow-root": ***REMOVED***
                display: "flow-root"
        ***REMOVED***,
            ".grid": ***REMOVED***
                display: "grid"
        ***REMOVED***,
            ".inline-grid": ***REMOVED***
                display: "inline-grid"
        ***REMOVED***,
            ".contents": ***REMOVED***
                display: "contents"
        ***REMOVED***,
            ".list-item": ***REMOVED***
                display: "list-item"
        ***REMOVED***,
            ".hidden": ***REMOVED***
                display: "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    aspectRatio: (0, _createUtilityPlugin).default("aspectRatio", [
        [
            "aspect",
            [
                "aspect-ratio"
            ]
        ]
    ]),
    height: (0, _createUtilityPlugin).default("height", [
        [
            "h",
            [
                "height"
            ]
        ]
    ]),
    maxHeight: (0, _createUtilityPlugin).default("maxHeight", [
        [
            "max-h",
            [
                "maxHeight"
            ]
        ]
    ]),
    minHeight: (0, _createUtilityPlugin).default("minHeight", [
        [
            "min-h",
            [
                "minHeight"
            ]
        ]
    ]),
    width: (0, _createUtilityPlugin).default("width", [
        [
            "w",
            [
                "width"
            ]
        ]
    ]),
    minWidth: (0, _createUtilityPlugin).default("minWidth", [
        [
            "min-w",
            [
                "minWidth"
            ]
        ]
    ]),
    maxWidth: (0, _createUtilityPlugin).default("maxWidth", [
        [
            "max-w",
            [
                "maxWidth"
            ]
        ]
    ]),
    flex: (0, _createUtilityPlugin).default("flex"),
    flexShrink: (0, _createUtilityPlugin).default("flexShrink", [
        [
            "flex-shrink",
            [
                "flex-shrink"
            ]
        ],
        [
            "shrink",
            [
                "flex-shrink"
            ]
        ], 
    ]),
    flexGrow: (0, _createUtilityPlugin).default("flexGrow", [
        [
            "flex-grow",
            [
                "flex-grow"
            ]
        ],
        [
            "grow",
            [
                "flex-grow"
            ]
        ], 
    ]),
    flexBasis: (0, _createUtilityPlugin).default("flexBasis", [
        [
            "basis",
            [
                "flex-basis"
            ]
        ]
    ]),
    tableLayout: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".table-auto": ***REMOVED***
                "table-layout": "auto"
        ***REMOVED***,
            ".table-fixed": ***REMOVED***
                "table-layout": "fixed"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    borderCollapse: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".border-collapse": ***REMOVED***
                "border-collapse": "collapse"
        ***REMOVED***,
            ".border-separate": ***REMOVED***
                "border-collapse": "separate"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    /*
  borderSpacing: (***REMOVED*** addDefaults, matchUtilities, theme ***REMOVED***) => ***REMOVED***
    addDefaults('border-spacing', ***REMOVED***
      '--tw-border-spacing-x': 0,
      '--tw-border-spacing-y': 0,
***REMOVED***)

    matchUtilities(
      ***REMOVED***
        'border-spacing': (value) => ***REMOVED***
          return ***REMOVED***
            '--tw-border-spacing-x': value,
            '--tw-border-spacing-y': value,
            '@defaults border-spacing': ***REMOVED******REMOVED***,
            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',
      ***REMOVED***
    ***REMOVED***,
        'border-spacing-x': (value) => ***REMOVED***
          return ***REMOVED***
            '--tw-border-spacing-x': value,
            '@defaults border-spacing': ***REMOVED******REMOVED***,
            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',
      ***REMOVED***
    ***REMOVED***,
        'border-spacing-y': (value) => ***REMOVED***
          return ***REMOVED***
            '--tw-border-spacing-y': value,
            '@defaults border-spacing': ***REMOVED******REMOVED***,
            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',
      ***REMOVED***
    ***REMOVED***,
  ***REMOVED***,
      ***REMOVED*** values: theme('borderSpacing') ***REMOVED***
    )
***REMOVED***
  */ transformOrigin: (0, _createUtilityPlugin).default("transformOrigin", [
        [
            "origin",
            [
                "transformOrigin"
            ]
        ]
    ]),
    translate: (0, _createUtilityPlugin).default("translate", [
        [
            [
                "translate-x",
                [
                    [
                        "@defaults transform",
                        ***REMOVED******REMOVED***
                    ],
                    "--tw-translate-x",
                    [
                        "transform",
                        cssTransformValue
                    ]
                ], 
            ],
            [
                "translate-y",
                [
                    [
                        "@defaults transform",
                        ***REMOVED******REMOVED***
                    ],
                    "--tw-translate-y",
                    [
                        "transform",
                        cssTransformValue
                    ]
                ], 
            ], 
        ], 
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    rotate: (0, _createUtilityPlugin).default("rotate", [
        [
            "rotate",
            [
                [
                    "@defaults transform",
                    ***REMOVED******REMOVED***
                ],
                "--tw-rotate",
                [
                    "transform",
                    cssTransformValue
                ]
            ]
        ]
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    skew: (0, _createUtilityPlugin).default("skew", [
        [
            [
                "skew-x",
                [
                    [
                        "@defaults transform",
                        ***REMOVED******REMOVED***
                    ],
                    "--tw-skew-x",
                    [
                        "transform",
                        cssTransformValue
                    ]
                ]
            ],
            [
                "skew-y",
                [
                    [
                        "@defaults transform",
                        ***REMOVED******REMOVED***
                    ],
                    "--tw-skew-y",
                    [
                        "transform",
                        cssTransformValue
                    ]
                ]
            ], 
        ], 
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    scale: (0, _createUtilityPlugin).default("scale", [
        [
            "scale",
            [
                [
                    "@defaults transform",
                    ***REMOVED******REMOVED***
                ],
                "--tw-scale-x",
                "--tw-scale-y",
                [
                    "transform",
                    cssTransformValue
                ], 
            ], 
        ],
        [
            [
                "scale-x",
                [
                    [
                        "@defaults transform",
                        ***REMOVED******REMOVED***
                    ],
                    "--tw-scale-x",
                    [
                        "transform",
                        cssTransformValue
                    ]
                ], 
            ],
            [
                "scale-y",
                [
                    [
                        "@defaults transform",
                        ***REMOVED******REMOVED***
                    ],
                    "--tw-scale-y",
                    [
                        "transform",
                        cssTransformValue
                    ]
                ], 
            ], 
        ], 
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    transform: (***REMOVED*** addDefaults , addUtilities***REMOVED***)=>***REMOVED***
        addDefaults("transform", ***REMOVED***
            "--tw-translate-x": "0",
            "--tw-translate-y": "0",
            "--tw-rotate": "0",
            "--tw-skew-x": "0",
            "--tw-skew-y": "0",
            "--tw-scale-x": "1",
            "--tw-scale-y": "1"
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".transform": ***REMOVED***
                "@defaults transform": ***REMOVED******REMOVED***,
                transform: cssTransformValue
        ***REMOVED***,
            ".transform-cpu": ***REMOVED***
                transform: cssTransformValue
        ***REMOVED***,
            ".transform-gpu": ***REMOVED***
                transform: cssTransformValue.replace("translate(var(--tw-translate-x), var(--tw-translate-y))", "translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)")
        ***REMOVED***,
            ".transform-none": ***REMOVED***
                transform: "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    animation: (***REMOVED*** matchUtilities , theme , config***REMOVED***)=>***REMOVED***
        let prefixName = (name)=>`$***REMOVED***config("prefix")***REMOVED***$***REMOVED***(0, _escapeClassName).default(name)***REMOVED***`
        ;
        var ref;
        let keyframes = Object.fromEntries(Object.entries((ref = theme("keyframes")) !== null && ref !== void 0 ? ref : ***REMOVED******REMOVED***).map(([key, value])=>***REMOVED***
            return [
                key,
                ***REMOVED***
                    [`@keyframes $***REMOVED***prefixName(key)***REMOVED***`]: value
            ***REMOVED***
            ];
    ***REMOVED***));
        matchUtilities(***REMOVED***
            animate: (value1)=>***REMOVED***
                let animations = (0, _parseAnimationValue).default(value1);
                return [
                    ...animations.flatMap((animation)=>keyframes[animation.name]
                    ),
                    ***REMOVED***
                        animation: animations.map((***REMOVED*** name , value***REMOVED***)=>***REMOVED***
                            if (name === undefined || keyframes[name] === undefined) ***REMOVED***
                                return value;
                        ***REMOVED***
                            return value.replace(name, prefixName(name));
                    ***REMOVED***).join(", ")
                ***REMOVED***, 
                ];
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("animation")
    ***REMOVED***);
***REMOVED***,
    cursor: (0, _createUtilityPlugin).default("cursor"),
    touchAction: (***REMOVED*** addDefaults , addUtilities***REMOVED***)=>***REMOVED***
        addDefaults("touch-action", ***REMOVED***
            "--tw-pan-x": " ",
            "--tw-pan-y": " ",
            "--tw-pinch-zoom": " "
    ***REMOVED***);
        let cssTouchActionValue = "var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)";
        addUtilities(***REMOVED***
            ".touch-auto": ***REMOVED***
                "touch-action": "auto"
        ***REMOVED***,
            ".touch-none": ***REMOVED***
                "touch-action": "none"
        ***REMOVED***,
            ".touch-pan-x": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pan-x": "pan-x",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-pan-left": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pan-x": "pan-left",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-pan-right": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pan-x": "pan-right",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-pan-y": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pan-y": "pan-y",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-pan-up": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pan-y": "pan-up",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-pan-down": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pan-y": "pan-down",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-pinch-zoom": ***REMOVED***
                "@defaults touch-action": ***REMOVED******REMOVED***,
                "--tw-pinch-zoom": "pinch-zoom",
                "touch-action": cssTouchActionValue
        ***REMOVED***,
            ".touch-manipulation": ***REMOVED***
                "touch-action": "manipulation"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    userSelect: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".select-none": ***REMOVED***
                "user-select": "none"
        ***REMOVED***,
            ".select-text": ***REMOVED***
                "user-select": "text"
        ***REMOVED***,
            ".select-all": ***REMOVED***
                "user-select": "all"
        ***REMOVED***,
            ".select-auto": ***REMOVED***
                "user-select": "auto"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    resize: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".resize-none": ***REMOVED***
                resize: "none"
        ***REMOVED***,
            ".resize-y": ***REMOVED***
                resize: "vertical"
        ***REMOVED***,
            ".resize-x": ***REMOVED***
                resize: "horizontal"
        ***REMOVED***,
            ".resize": ***REMOVED***
                resize: "both"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    scrollSnapType: (***REMOVED*** addDefaults , addUtilities***REMOVED***)=>***REMOVED***
        addDefaults("scroll-snap-type", ***REMOVED***
            "--tw-scroll-snap-strictness": "proximity"
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".snap-none": ***REMOVED***
                "scroll-snap-type": "none"
        ***REMOVED***,
            ".snap-x": ***REMOVED***
                "@defaults scroll-snap-type": ***REMOVED******REMOVED***,
                "scroll-snap-type": "x var(--tw-scroll-snap-strictness)"
        ***REMOVED***,
            ".snap-y": ***REMOVED***
                "@defaults scroll-snap-type": ***REMOVED******REMOVED***,
                "scroll-snap-type": "y var(--tw-scroll-snap-strictness)"
        ***REMOVED***,
            ".snap-both": ***REMOVED***
                "@defaults scroll-snap-type": ***REMOVED******REMOVED***,
                "scroll-snap-type": "both var(--tw-scroll-snap-strictness)"
        ***REMOVED***,
            ".snap-mandatory": ***REMOVED***
                "--tw-scroll-snap-strictness": "mandatory"
        ***REMOVED***,
            ".snap-proximity": ***REMOVED***
                "--tw-scroll-snap-strictness": "proximity"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    scrollSnapAlign: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".snap-start": ***REMOVED***
                "scroll-snap-align": "start"
        ***REMOVED***,
            ".snap-end": ***REMOVED***
                "scroll-snap-align": "end"
        ***REMOVED***,
            ".snap-center": ***REMOVED***
                "scroll-snap-align": "center"
        ***REMOVED***,
            ".snap-align-none": ***REMOVED***
                "scroll-snap-align": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    scrollSnapStop: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".snap-normal": ***REMOVED***
                "scroll-snap-stop": "normal"
        ***REMOVED***,
            ".snap-always": ***REMOVED***
                "scroll-snap-stop": "always"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    scrollMargin: (0, _createUtilityPlugin).default("scrollMargin", [
        [
            "scroll-m",
            [
                "scroll-margin"
            ]
        ],
        [
            [
                "scroll-mx",
                [
                    "scroll-margin-left",
                    "scroll-margin-right"
                ]
            ],
            [
                "scroll-my",
                [
                    "scroll-margin-top",
                    "scroll-margin-bottom"
                ]
            ], 
        ],
        [
            [
                "scroll-mt",
                [
                    "scroll-margin-top"
                ]
            ],
            [
                "scroll-mr",
                [
                    "scroll-margin-right"
                ]
            ],
            [
                "scroll-mb",
                [
                    "scroll-margin-bottom"
                ]
            ],
            [
                "scroll-ml",
                [
                    "scroll-margin-left"
                ]
            ], 
        ], 
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    scrollPadding: (0, _createUtilityPlugin).default("scrollPadding", [
        [
            "scroll-p",
            [
                "scroll-padding"
            ]
        ],
        [
            [
                "scroll-px",
                [
                    "scroll-padding-left",
                    "scroll-padding-right"
                ]
            ],
            [
                "scroll-py",
                [
                    "scroll-padding-top",
                    "scroll-padding-bottom"
                ]
            ], 
        ],
        [
            [
                "scroll-pt",
                [
                    "scroll-padding-top"
                ]
            ],
            [
                "scroll-pr",
                [
                    "scroll-padding-right"
                ]
            ],
            [
                "scroll-pb",
                [
                    "scroll-padding-bottom"
                ]
            ],
            [
                "scroll-pl",
                [
                    "scroll-padding-left"
                ]
            ], 
        ], 
    ]),
    listStylePosition: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".list-inside": ***REMOVED***
                "list-style-position": "inside"
        ***REMOVED***,
            ".list-outside": ***REMOVED***
                "list-style-position": "outside"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    listStyleType: (0, _createUtilityPlugin).default("listStyleType", [
        [
            "list",
            [
                "listStyleType"
            ]
        ]
    ]),
    appearance: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".appearance-none": ***REMOVED***
                appearance: "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    columns: (0, _createUtilityPlugin).default("columns", [
        [
            "columns",
            [
                "columns"
            ]
        ]
    ]),
    breakBefore: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".break-before-auto": ***REMOVED***
                "break-before": "auto"
        ***REMOVED***,
            ".break-before-avoid": ***REMOVED***
                "break-before": "avoid"
        ***REMOVED***,
            ".break-before-all": ***REMOVED***
                "break-before": "all"
        ***REMOVED***,
            ".break-before-avoid-page": ***REMOVED***
                "break-before": "avoid-page"
        ***REMOVED***,
            ".break-before-page": ***REMOVED***
                "break-before": "page"
        ***REMOVED***,
            ".break-before-left": ***REMOVED***
                "break-before": "left"
        ***REMOVED***,
            ".break-before-right": ***REMOVED***
                "break-before": "right"
        ***REMOVED***,
            ".break-before-column": ***REMOVED***
                "break-before": "column"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    breakInside: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".break-inside-auto": ***REMOVED***
                "break-inside": "auto"
        ***REMOVED***,
            ".break-inside-avoid": ***REMOVED***
                "break-inside": "avoid"
        ***REMOVED***,
            ".break-inside-avoid-page": ***REMOVED***
                "break-inside": "avoid-page"
        ***REMOVED***,
            ".break-inside-avoid-column": ***REMOVED***
                "break-inside": "avoid-column"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    breakAfter: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".break-after-auto": ***REMOVED***
                "break-after": "auto"
        ***REMOVED***,
            ".break-after-avoid": ***REMOVED***
                "break-after": "avoid"
        ***REMOVED***,
            ".break-after-all": ***REMOVED***
                "break-after": "all"
        ***REMOVED***,
            ".break-after-avoid-page": ***REMOVED***
                "break-after": "avoid-page"
        ***REMOVED***,
            ".break-after-page": ***REMOVED***
                "break-after": "page"
        ***REMOVED***,
            ".break-after-left": ***REMOVED***
                "break-after": "left"
        ***REMOVED***,
            ".break-after-right": ***REMOVED***
                "break-after": "right"
        ***REMOVED***,
            ".break-after-column": ***REMOVED***
                "break-after": "column"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    gridAutoColumns: (0, _createUtilityPlugin).default("gridAutoColumns", [
        [
            "auto-cols",
            [
                "gridAutoColumns"
            ]
        ]
    ]),
    gridAutoFlow: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".grid-flow-row": ***REMOVED***
                gridAutoFlow: "row"
        ***REMOVED***,
            ".grid-flow-col": ***REMOVED***
                gridAutoFlow: "column"
        ***REMOVED***,
            ".grid-flow-row-dense": ***REMOVED***
                gridAutoFlow: "row dense"
        ***REMOVED***,
            ".grid-flow-col-dense": ***REMOVED***
                gridAutoFlow: "column dense"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    gridAutoRows: (0, _createUtilityPlugin).default("gridAutoRows", [
        [
            "auto-rows",
            [
                "gridAutoRows"
            ]
        ]
    ]),
    gridTemplateColumns: (0, _createUtilityPlugin).default("gridTemplateColumns", [
        [
            "grid-cols",
            [
                "gridTemplateColumns"
            ]
        ], 
    ]),
    gridTemplateRows: (0, _createUtilityPlugin).default("gridTemplateRows", [
        [
            "grid-rows",
            [
                "gridTemplateRows"
            ]
        ]
    ]),
    flexDirection: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".flex-row": ***REMOVED***
                "flex-direction": "row"
        ***REMOVED***,
            ".flex-row-reverse": ***REMOVED***
                "flex-direction": "row-reverse"
        ***REMOVED***,
            ".flex-col": ***REMOVED***
                "flex-direction": "column"
        ***REMOVED***,
            ".flex-col-reverse": ***REMOVED***
                "flex-direction": "column-reverse"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    flexWrap: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".flex-wrap": ***REMOVED***
                "flex-wrap": "wrap"
        ***REMOVED***,
            ".flex-wrap-reverse": ***REMOVED***
                "flex-wrap": "wrap-reverse"
        ***REMOVED***,
            ".flex-nowrap": ***REMOVED***
                "flex-wrap": "nowrap"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    placeContent: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".place-content-center": ***REMOVED***
                "place-content": "center"
        ***REMOVED***,
            ".place-content-start": ***REMOVED***
                "place-content": "start"
        ***REMOVED***,
            ".place-content-end": ***REMOVED***
                "place-content": "end"
        ***REMOVED***,
            ".place-content-between": ***REMOVED***
                "place-content": "space-between"
        ***REMOVED***,
            ".place-content-around": ***REMOVED***
                "place-content": "space-around"
        ***REMOVED***,
            ".place-content-evenly": ***REMOVED***
                "place-content": "space-evenly"
        ***REMOVED***,
            ".place-content-stretch": ***REMOVED***
                "place-content": "stretch"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    placeItems: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".place-items-start": ***REMOVED***
                "place-items": "start"
        ***REMOVED***,
            ".place-items-end": ***REMOVED***
                "place-items": "end"
        ***REMOVED***,
            ".place-items-center": ***REMOVED***
                "place-items": "center"
        ***REMOVED***,
            ".place-items-stretch": ***REMOVED***
                "place-items": "stretch"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    alignContent: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".content-center": ***REMOVED***
                "align-content": "center"
        ***REMOVED***,
            ".content-start": ***REMOVED***
                "align-content": "flex-start"
        ***REMOVED***,
            ".content-end": ***REMOVED***
                "align-content": "flex-end"
        ***REMOVED***,
            ".content-between": ***REMOVED***
                "align-content": "space-between"
        ***REMOVED***,
            ".content-around": ***REMOVED***
                "align-content": "space-around"
        ***REMOVED***,
            ".content-evenly": ***REMOVED***
                "align-content": "space-evenly"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    alignItems: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".items-start": ***REMOVED***
                "align-items": "flex-start"
        ***REMOVED***,
            ".items-end": ***REMOVED***
                "align-items": "flex-end"
        ***REMOVED***,
            ".items-center": ***REMOVED***
                "align-items": "center"
        ***REMOVED***,
            ".items-baseline": ***REMOVED***
                "align-items": "baseline"
        ***REMOVED***,
            ".items-stretch": ***REMOVED***
                "align-items": "stretch"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    justifyContent: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".justify-start": ***REMOVED***
                "justify-content": "flex-start"
        ***REMOVED***,
            ".justify-end": ***REMOVED***
                "justify-content": "flex-end"
        ***REMOVED***,
            ".justify-center": ***REMOVED***
                "justify-content": "center"
        ***REMOVED***,
            ".justify-between": ***REMOVED***
                "justify-content": "space-between"
        ***REMOVED***,
            ".justify-around": ***REMOVED***
                "justify-content": "space-around"
        ***REMOVED***,
            ".justify-evenly": ***REMOVED***
                "justify-content": "space-evenly"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    justifyItems: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".justify-items-start": ***REMOVED***
                "justify-items": "start"
        ***REMOVED***,
            ".justify-items-end": ***REMOVED***
                "justify-items": "end"
        ***REMOVED***,
            ".justify-items-center": ***REMOVED***
                "justify-items": "center"
        ***REMOVED***,
            ".justify-items-stretch": ***REMOVED***
                "justify-items": "stretch"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    gap: (0, _createUtilityPlugin).default("gap", [
        [
            "gap",
            [
                "gap"
            ]
        ],
        [
            [
                "gap-x",
                [
                    "columnGap"
                ]
            ],
            [
                "gap-y",
                [
                    "rowGap"
                ]
            ], 
        ], 
    ]),
    space: (***REMOVED*** matchUtilities , addUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "space-x": (value)=>***REMOVED***
                value = value === "0" ? "0px" : value;
                return ***REMOVED***
                    "& > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                        "--tw-space-x-reverse": "0",
                        "margin-right": `calc($***REMOVED***value***REMOVED*** * var(--tw-space-x-reverse))`,
                        "margin-left": `calc($***REMOVED***value***REMOVED*** * calc(1 - var(--tw-space-x-reverse)))`
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***,
            "space-y": (value)=>***REMOVED***
                value = value === "0" ? "0px" : value;
                return ***REMOVED***
                    "& > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                        "--tw-space-y-reverse": "0",
                        "margin-top": `calc($***REMOVED***value***REMOVED*** * calc(1 - var(--tw-space-y-reverse)))`,
                        "margin-bottom": `calc($***REMOVED***value***REMOVED*** * var(--tw-space-y-reverse))`
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("space"),
            supportsNegativeValues: true
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".space-y-reverse > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "--tw-space-y-reverse": "1"
        ***REMOVED***,
            ".space-x-reverse > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "--tw-space-x-reverse": "1"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    divideWidth: (***REMOVED*** matchUtilities , addUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "divide-x": (value)=>***REMOVED***
                value = value === "0" ? "0px" : value;
                return ***REMOVED***
                    "& > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                        "@defaults border-width": ***REMOVED******REMOVED***,
                        "--tw-divide-x-reverse": "0",
                        "border-right-width": `calc($***REMOVED***value***REMOVED*** * var(--tw-divide-x-reverse))`,
                        "border-left-width": `calc($***REMOVED***value***REMOVED*** * calc(1 - var(--tw-divide-x-reverse)))`
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***,
            "divide-y": (value)=>***REMOVED***
                value = value === "0" ? "0px" : value;
                return ***REMOVED***
                    "& > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                        "@defaults border-width": ***REMOVED******REMOVED***,
                        "--tw-divide-y-reverse": "0",
                        "border-top-width": `calc($***REMOVED***value***REMOVED*** * calc(1 - var(--tw-divide-y-reverse)))`,
                        "border-bottom-width": `calc($***REMOVED***value***REMOVED*** * var(--tw-divide-y-reverse))`
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("divideWidth"),
            type: [
                "line-width",
                "length"
            ]
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".divide-y-reverse > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "@defaults border-width": ***REMOVED******REMOVED***,
                "--tw-divide-y-reverse": "1"
        ***REMOVED***,
            ".divide-x-reverse > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "@defaults border-width": ***REMOVED******REMOVED***,
                "--tw-divide-x-reverse": "1"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    divideStyle: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".divide-solid > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "border-style": "solid"
        ***REMOVED***,
            ".divide-dashed > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "border-style": "dashed"
        ***REMOVED***,
            ".divide-dotted > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "border-style": "dotted"
        ***REMOVED***,
            ".divide-double > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "border-style": "double"
        ***REMOVED***,
            ".divide-none > :not([hidden]) ~ :not([hidden])": ***REMOVED***
                "border-style": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    divideColor: (***REMOVED*** matchUtilities , theme , corePlugins: corePlugins1***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            divide: (value)=>***REMOVED***
                if (!corePlugins1("divideOpacity")) ***REMOVED***
                    return ***REMOVED***
                        ["& > :not([hidden]) ~ :not([hidden])"]: ***REMOVED***
                            "border-color": (0, _toColorValue).default(value)
                    ***REMOVED***
                ***REMOVED***;
            ***REMOVED***
                return ***REMOVED***
                    ["& > :not([hidden]) ~ :not([hidden])"]: (0, _withAlphaVariable).default(***REMOVED***
                        color: value,
                        property: "border-color",
                        variable: "--tw-divide-opacity"
                ***REMOVED***)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: ((***REMOVED*** DEFAULT: _ , ...colors ***REMOVED***)=>colors
            )((0, _flattenColorPalette).default(theme("divideColor"))),
            type: "color"
    ***REMOVED***);
***REMOVED***,
    divideOpacity: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "divide-opacity": (value)=>***REMOVED***
                return ***REMOVED***
                    [`& > :not([hidden]) ~ :not([hidden])`]: ***REMOVED***
                        "--tw-divide-opacity": value
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("divideOpacity")
    ***REMOVED***);
***REMOVED***,
    placeSelf: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".place-self-auto": ***REMOVED***
                "place-self": "auto"
        ***REMOVED***,
            ".place-self-start": ***REMOVED***
                "place-self": "start"
        ***REMOVED***,
            ".place-self-end": ***REMOVED***
                "place-self": "end"
        ***REMOVED***,
            ".place-self-center": ***REMOVED***
                "place-self": "center"
        ***REMOVED***,
            ".place-self-stretch": ***REMOVED***
                "place-self": "stretch"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    alignSelf: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".self-auto": ***REMOVED***
                "align-self": "auto"
        ***REMOVED***,
            ".self-start": ***REMOVED***
                "align-self": "flex-start"
        ***REMOVED***,
            ".self-end": ***REMOVED***
                "align-self": "flex-end"
        ***REMOVED***,
            ".self-center": ***REMOVED***
                "align-self": "center"
        ***REMOVED***,
            ".self-stretch": ***REMOVED***
                "align-self": "stretch"
        ***REMOVED***,
            ".self-baseline": ***REMOVED***
                "align-self": "baseline"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    justifySelf: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".justify-self-auto": ***REMOVED***
                "justify-self": "auto"
        ***REMOVED***,
            ".justify-self-start": ***REMOVED***
                "justify-self": "start"
        ***REMOVED***,
            ".justify-self-end": ***REMOVED***
                "justify-self": "end"
        ***REMOVED***,
            ".justify-self-center": ***REMOVED***
                "justify-self": "center"
        ***REMOVED***,
            ".justify-self-stretch": ***REMOVED***
                "justify-self": "stretch"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    overflow: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".overflow-auto": ***REMOVED***
                overflow: "auto"
        ***REMOVED***,
            ".overflow-hidden": ***REMOVED***
                overflow: "hidden"
        ***REMOVED***,
            ".overflow-clip": ***REMOVED***
                overflow: "clip"
        ***REMOVED***,
            ".overflow-visible": ***REMOVED***
                overflow: "visible"
        ***REMOVED***,
            ".overflow-scroll": ***REMOVED***
                overflow: "scroll"
        ***REMOVED***,
            ".overflow-x-auto": ***REMOVED***
                "overflow-x": "auto"
        ***REMOVED***,
            ".overflow-y-auto": ***REMOVED***
                "overflow-y": "auto"
        ***REMOVED***,
            ".overflow-x-hidden": ***REMOVED***
                "overflow-x": "hidden"
        ***REMOVED***,
            ".overflow-y-hidden": ***REMOVED***
                "overflow-y": "hidden"
        ***REMOVED***,
            ".overflow-x-clip": ***REMOVED***
                "overflow-x": "clip"
        ***REMOVED***,
            ".overflow-y-clip": ***REMOVED***
                "overflow-y": "clip"
        ***REMOVED***,
            ".overflow-x-visible": ***REMOVED***
                "overflow-x": "visible"
        ***REMOVED***,
            ".overflow-y-visible": ***REMOVED***
                "overflow-y": "visible"
        ***REMOVED***,
            ".overflow-x-scroll": ***REMOVED***
                "overflow-x": "scroll"
        ***REMOVED***,
            ".overflow-y-scroll": ***REMOVED***
                "overflow-y": "scroll"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    overscrollBehavior: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".overscroll-auto": ***REMOVED***
                "overscroll-behavior": "auto"
        ***REMOVED***,
            ".overscroll-contain": ***REMOVED***
                "overscroll-behavior": "contain"
        ***REMOVED***,
            ".overscroll-none": ***REMOVED***
                "overscroll-behavior": "none"
        ***REMOVED***,
            ".overscroll-y-auto": ***REMOVED***
                "overscroll-behavior-y": "auto"
        ***REMOVED***,
            ".overscroll-y-contain": ***REMOVED***
                "overscroll-behavior-y": "contain"
        ***REMOVED***,
            ".overscroll-y-none": ***REMOVED***
                "overscroll-behavior-y": "none"
        ***REMOVED***,
            ".overscroll-x-auto": ***REMOVED***
                "overscroll-behavior-x": "auto"
        ***REMOVED***,
            ".overscroll-x-contain": ***REMOVED***
                "overscroll-behavior-x": "contain"
        ***REMOVED***,
            ".overscroll-x-none": ***REMOVED***
                "overscroll-behavior-x": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    scrollBehavior: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".scroll-auto": ***REMOVED***
                "scroll-behavior": "auto"
        ***REMOVED***,
            ".scroll-smooth": ***REMOVED***
                "scroll-behavior": "smooth"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    textOverflow: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".truncate": ***REMOVED***
                overflow: "hidden",
                "text-overflow": "ellipsis",
                "white-space": "nowrap"
        ***REMOVED***,
            ".overflow-ellipsis": ***REMOVED***
                "text-overflow": "ellipsis"
        ***REMOVED***,
            ".text-ellipsis": ***REMOVED***
                "text-overflow": "ellipsis"
        ***REMOVED***,
            ".text-clip": ***REMOVED***
                "text-overflow": "clip"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    whitespace: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".whitespace-normal": ***REMOVED***
                "white-space": "normal"
        ***REMOVED***,
            ".whitespace-nowrap": ***REMOVED***
                "white-space": "nowrap"
        ***REMOVED***,
            ".whitespace-pre": ***REMOVED***
                "white-space": "pre"
        ***REMOVED***,
            ".whitespace-pre-line": ***REMOVED***
                "white-space": "pre-line"
        ***REMOVED***,
            ".whitespace-pre-wrap": ***REMOVED***
                "white-space": "pre-wrap"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    wordBreak: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".break-normal": ***REMOVED***
                "overflow-wrap": "normal",
                "word-break": "normal"
        ***REMOVED***,
            ".break-words": ***REMOVED***
                "overflow-wrap": "break-word"
        ***REMOVED***,
            ".break-all": ***REMOVED***
                "word-break": "break-all"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    borderRadius: (0, _createUtilityPlugin).default("borderRadius", [
        [
            "rounded",
            [
                "border-radius"
            ]
        ],
        [
            [
                "rounded-t",
                [
                    "border-top-left-radius",
                    "border-top-right-radius"
                ]
            ],
            [
                "rounded-r",
                [
                    "border-top-right-radius",
                    "border-bottom-right-radius"
                ]
            ],
            [
                "rounded-b",
                [
                    "border-bottom-right-radius",
                    "border-bottom-left-radius"
                ]
            ],
            [
                "rounded-l",
                [
                    "border-top-left-radius",
                    "border-bottom-left-radius"
                ]
            ], 
        ],
        [
            [
                "rounded-tl",
                [
                    "border-top-left-radius"
                ]
            ],
            [
                "rounded-tr",
                [
                    "border-top-right-radius"
                ]
            ],
            [
                "rounded-br",
                [
                    "border-bottom-right-radius"
                ]
            ],
            [
                "rounded-bl",
                [
                    "border-bottom-left-radius"
                ]
            ], 
        ], 
    ]),
    borderWidth: (0, _createUtilityPlugin).default("borderWidth", [
        [
            "border",
            [
                [
                    "@defaults border-width",
                    ***REMOVED******REMOVED***
                ],
                "border-width"
            ]
        ],
        [
            [
                "border-x",
                [
                    [
                        "@defaults border-width",
                        ***REMOVED******REMOVED***
                    ],
                    "border-left-width",
                    "border-right-width"
                ]
            ],
            [
                "border-y",
                [
                    [
                        "@defaults border-width",
                        ***REMOVED******REMOVED***
                    ],
                    "border-top-width",
                    "border-bottom-width"
                ]
            ], 
        ],
        [
            [
                "border-t",
                [
                    [
                        "@defaults border-width",
                        ***REMOVED******REMOVED***
                    ],
                    "border-top-width"
                ]
            ],
            [
                "border-r",
                [
                    [
                        "@defaults border-width",
                        ***REMOVED******REMOVED***
                    ],
                    "border-right-width"
                ]
            ],
            [
                "border-b",
                [
                    [
                        "@defaults border-width",
                        ***REMOVED******REMOVED***
                    ],
                    "border-bottom-width"
                ]
            ],
            [
                "border-l",
                [
                    [
                        "@defaults border-width",
                        ***REMOVED******REMOVED***
                    ],
                    "border-left-width"
                ]
            ], 
        ], 
    ], ***REMOVED***
        type: [
            "line-width",
            "length"
        ]
***REMOVED***),
    borderStyle: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".border-solid": ***REMOVED***
                "border-style": "solid"
        ***REMOVED***,
            ".border-dashed": ***REMOVED***
                "border-style": "dashed"
        ***REMOVED***,
            ".border-dotted": ***REMOVED***
                "border-style": "dotted"
        ***REMOVED***,
            ".border-double": ***REMOVED***
                "border-style": "double"
        ***REMOVED***,
            ".border-hidden": ***REMOVED***
                "border-style": "hidden"
        ***REMOVED***,
            ".border-none": ***REMOVED***
                "border-style": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    borderColor: (***REMOVED*** matchUtilities , theme , corePlugins: corePlugins2***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            border: (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "border-color",
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: ((***REMOVED*** DEFAULT: _ , ...colors ***REMOVED***)=>colors
            )((0, _flattenColorPalette).default(theme("borderColor"))),
            type: [
                "color"
            ]
    ***REMOVED***);
        matchUtilities(***REMOVED***
            "border-x": (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-left-color": (0, _toColorValue).default(value),
                        "border-right-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: [
                        "border-left-color",
                        "border-right-color"
                    ],
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***,
            "border-y": (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-top-color": (0, _toColorValue).default(value),
                        "border-bottom-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: [
                        "border-top-color",
                        "border-bottom-color"
                    ],
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: ((***REMOVED*** DEFAULT: _ , ...colors ***REMOVED***)=>colors
            )((0, _flattenColorPalette).default(theme("borderColor"))),
            type: "color"
    ***REMOVED***);
        matchUtilities(***REMOVED***
            "border-t": (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-top-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "border-top-color",
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***,
            "border-r": (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-right-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "border-right-color",
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***,
            "border-b": (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-bottom-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "border-bottom-color",
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***,
            "border-l": (value)=>***REMOVED***
                if (!corePlugins2("borderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "border-left-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "border-left-color",
                    variable: "--tw-border-opacity"
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: ((***REMOVED*** DEFAULT: _ , ...colors ***REMOVED***)=>colors
            )((0, _flattenColorPalette).default(theme("borderColor"))),
            type: "color"
    ***REMOVED***);
***REMOVED***,
    borderOpacity: (0, _createUtilityPlugin).default("borderOpacity", [
        [
            "border-opacity",
            [
                "--tw-border-opacity"
            ]
        ], 
    ]),
    backgroundColor: (***REMOVED*** matchUtilities , theme , corePlugins: corePlugins3***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            bg: (value)=>***REMOVED***
                if (!corePlugins3("backgroundOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "background-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "background-color",
                    variable: "--tw-bg-opacity"
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("backgroundColor")),
            type: "color"
    ***REMOVED***);
***REMOVED***,
    backgroundOpacity: (0, _createUtilityPlugin).default("backgroundOpacity", [
        [
            "bg-opacity",
            [
                "--tw-bg-opacity"
            ]
        ], 
    ]),
    backgroundImage: (0, _createUtilityPlugin).default("backgroundImage", [
        [
            "bg",
            [
                "background-image"
            ]
        ]
    ], ***REMOVED***
        type: [
            "lookup",
            "image",
            "url"
        ]
***REMOVED***),
    gradientColorStops: (()=>***REMOVED***
        function transparentTo(value) ***REMOVED***
            return (0, _withAlphaVariable).withAlphaValue(value, 0, "rgb(255 255 255 / 0)");
    ***REMOVED***
        return function(***REMOVED*** matchUtilities , theme***REMOVED***) ***REMOVED***
            let options = ***REMOVED***
                values: (0, _flattenColorPalette).default(theme("gradientColorStops")),
                type: [
                    "color",
                    "any"
                ]
        ***REMOVED***;
            matchUtilities(***REMOVED***
                from: (value)=>***REMOVED***
                    let transparentToValue = transparentTo(value);
                    return ***REMOVED***
                        "--tw-gradient-from": (0, _toColorValue).default(value, "from"),
                        "--tw-gradient-stops": `var(--tw-gradient-from), var(--tw-gradient-to, $***REMOVED***transparentToValue***REMOVED***)`
                ***REMOVED***;
            ***REMOVED***
        ***REMOVED***, options);
            matchUtilities(***REMOVED***
                via: (value)=>***REMOVED***
                    let transparentToValue = transparentTo(value);
                    return ***REMOVED***
                        "--tw-gradient-stops": `var(--tw-gradient-from), $***REMOVED***(0, _toColorValue).default(value, "via")***REMOVED***, var(--tw-gradient-to, $***REMOVED***transparentToValue***REMOVED***)`
                ***REMOVED***;
            ***REMOVED***
        ***REMOVED***, options);
            matchUtilities(***REMOVED***
                to: (value)=>(***REMOVED***
                        "--tw-gradient-to": (0, _toColorValue).default(value, "to")
                ***REMOVED***)
        ***REMOVED***, options);
    ***REMOVED***;
***REMOVED***)(),
    boxDecorationBreak: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".decoration-slice": ***REMOVED***
                "box-decoration-break": "slice"
        ***REMOVED***,
            ".decoration-clone": ***REMOVED***
                "box-decoration-break": "clone"
        ***REMOVED***,
            ".box-decoration-slice": ***REMOVED***
                "box-decoration-break": "slice"
        ***REMOVED***,
            ".box-decoration-clone": ***REMOVED***
                "box-decoration-break": "clone"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    backgroundSize: (0, _createUtilityPlugin).default("backgroundSize", [
        [
            "bg",
            [
                "background-size"
            ]
        ]
    ], ***REMOVED***
        type: [
            "lookup",
            "length",
            "percentage"
        ]
***REMOVED***),
    backgroundAttachment: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".bg-fixed": ***REMOVED***
                "background-attachment": "fixed"
        ***REMOVED***,
            ".bg-local": ***REMOVED***
                "background-attachment": "local"
        ***REMOVED***,
            ".bg-scroll": ***REMOVED***
                "background-attachment": "scroll"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    backgroundClip: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".bg-clip-border": ***REMOVED***
                "background-clip": "border-box"
        ***REMOVED***,
            ".bg-clip-padding": ***REMOVED***
                "background-clip": "padding-box"
        ***REMOVED***,
            ".bg-clip-content": ***REMOVED***
                "background-clip": "content-box"
        ***REMOVED***,
            ".bg-clip-text": ***REMOVED***
                "background-clip": "text"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    backgroundPosition: (0, _createUtilityPlugin).default("backgroundPosition", [
        [
            "bg",
            [
                "background-position"
            ]
        ]
    ], ***REMOVED***
        type: [
            "lookup",
            "position"
        ]
***REMOVED***),
    backgroundRepeat: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".bg-repeat": ***REMOVED***
                "background-repeat": "repeat"
        ***REMOVED***,
            ".bg-no-repeat": ***REMOVED***
                "background-repeat": "no-repeat"
        ***REMOVED***,
            ".bg-repeat-x": ***REMOVED***
                "background-repeat": "repeat-x"
        ***REMOVED***,
            ".bg-repeat-y": ***REMOVED***
                "background-repeat": "repeat-y"
        ***REMOVED***,
            ".bg-repeat-round": ***REMOVED***
                "background-repeat": "round"
        ***REMOVED***,
            ".bg-repeat-space": ***REMOVED***
                "background-repeat": "space"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    backgroundOrigin: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".bg-origin-border": ***REMOVED***
                "background-origin": "border-box"
        ***REMOVED***,
            ".bg-origin-padding": ***REMOVED***
                "background-origin": "padding-box"
        ***REMOVED***,
            ".bg-origin-content": ***REMOVED***
                "background-origin": "content-box"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    fill: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            fill: (value)=>***REMOVED***
                return ***REMOVED***
                    fill: (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("fill")),
            type: [
                "color",
                "any"
            ]
    ***REMOVED***);
***REMOVED***,
    stroke: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            stroke: (value)=>***REMOVED***
                return ***REMOVED***
                    stroke: (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("stroke")),
            type: [
                "color",
                "url"
            ]
    ***REMOVED***);
***REMOVED***,
    strokeWidth: (0, _createUtilityPlugin).default("strokeWidth", [
        [
            "stroke",
            [
                "stroke-width"
            ]
        ]
    ], ***REMOVED***
        type: [
            "length",
            "number",
            "percentage"
        ]
***REMOVED***),
    objectFit: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".object-contain": ***REMOVED***
                "object-fit": "contain"
        ***REMOVED***,
            ".object-cover": ***REMOVED***
                "object-fit": "cover"
        ***REMOVED***,
            ".object-fill": ***REMOVED***
                "object-fit": "fill"
        ***REMOVED***,
            ".object-none": ***REMOVED***
                "object-fit": "none"
        ***REMOVED***,
            ".object-scale-down": ***REMOVED***
                "object-fit": "scale-down"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    objectPosition: (0, _createUtilityPlugin).default("objectPosition", [
        [
            "object",
            [
                "object-position"
            ]
        ]
    ]),
    padding: (0, _createUtilityPlugin).default("padding", [
        [
            "p",
            [
                "padding"
            ]
        ],
        [
            [
                "px",
                [
                    "padding-left",
                    "padding-right"
                ]
            ],
            [
                "py",
                [
                    "padding-top",
                    "padding-bottom"
                ]
            ], 
        ],
        [
            [
                "pt",
                [
                    "padding-top"
                ]
            ],
            [
                "pr",
                [
                    "padding-right"
                ]
            ],
            [
                "pb",
                [
                    "padding-bottom"
                ]
            ],
            [
                "pl",
                [
                    "padding-left"
                ]
            ], 
        ], 
    ]),
    textAlign: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".text-left": ***REMOVED***
                "text-align": "left"
        ***REMOVED***,
            ".text-center": ***REMOVED***
                "text-align": "center"
        ***REMOVED***,
            ".text-right": ***REMOVED***
                "text-align": "right"
        ***REMOVED***,
            ".text-justify": ***REMOVED***
                "text-align": "justify"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    textIndent: (0, _createUtilityPlugin).default("textIndent", [
        [
            "indent",
            [
                "text-indent"
            ]
        ]
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    verticalAlign: (***REMOVED*** addUtilities , matchUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".align-baseline": ***REMOVED***
                "vertical-align": "baseline"
        ***REMOVED***,
            ".align-top": ***REMOVED***
                "vertical-align": "top"
        ***REMOVED***,
            ".align-middle": ***REMOVED***
                "vertical-align": "middle"
        ***REMOVED***,
            ".align-bottom": ***REMOVED***
                "vertical-align": "bottom"
        ***REMOVED***,
            ".align-text-top": ***REMOVED***
                "vertical-align": "text-top"
        ***REMOVED***,
            ".align-text-bottom": ***REMOVED***
                "vertical-align": "text-bottom"
        ***REMOVED***,
            ".align-sub": ***REMOVED***
                "vertical-align": "sub"
        ***REMOVED***,
            ".align-super": ***REMOVED***
                "vertical-align": "super"
        ***REMOVED***
    ***REMOVED***);
        matchUtilities(***REMOVED***
            align: (value)=>(***REMOVED***
                    "vertical-align": value
            ***REMOVED***)
    ***REMOVED***);
***REMOVED***,
    fontFamily: (0, _createUtilityPlugin).default("fontFamily", [
        [
            "font",
            [
                "fontFamily"
            ]
        ]
    ], ***REMOVED***
        type: [
            "lookup",
            "generic-name",
            "family-name"
        ]
***REMOVED***),
    fontSize: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            text: (value)=>***REMOVED***
                let [fontSize, options] = Array.isArray(value) ? value : [
                    value
                ];
                let ***REMOVED*** lineHeight , letterSpacing***REMOVED*** = (0, _isPlainObject).default(options) ? options : ***REMOVED***
                    lineHeight: options
            ***REMOVED***;
                return ***REMOVED***
                    "font-size": fontSize,
                    ...lineHeight === undefined ? ***REMOVED******REMOVED*** : ***REMOVED***
                        "line-height": lineHeight
                ***REMOVED***,
                    ...letterSpacing === undefined ? ***REMOVED******REMOVED*** : ***REMOVED***
                        "letter-spacing": letterSpacing
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("fontSize"),
            type: [
                "absolute-size",
                "relative-size",
                "length",
                "percentage"
            ]
    ***REMOVED***);
***REMOVED***,
    fontWeight: (0, _createUtilityPlugin).default("fontWeight", [
        [
            "font",
            [
                "fontWeight"
            ]
        ]
    ], ***REMOVED***
        type: [
            "lookup",
            "number"
        ]
***REMOVED***),
    textTransform: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".uppercase": ***REMOVED***
                "text-transform": "uppercase"
        ***REMOVED***,
            ".lowercase": ***REMOVED***
                "text-transform": "lowercase"
        ***REMOVED***,
            ".capitalize": ***REMOVED***
                "text-transform": "capitalize"
        ***REMOVED***,
            ".normal-case": ***REMOVED***
                "text-transform": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    fontStyle: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".italic": ***REMOVED***
                "font-style": "italic"
        ***REMOVED***,
            ".not-italic": ***REMOVED***
                "font-style": "normal"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    fontVariantNumeric: (***REMOVED*** addDefaults , addUtilities***REMOVED***)=>***REMOVED***
        let cssFontVariantNumericValue = "var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)";
        addDefaults("font-variant-numeric", ***REMOVED***
            "--tw-ordinal": " ",
            "--tw-slashed-zero": " ",
            "--tw-numeric-figure": " ",
            "--tw-numeric-spacing": " ",
            "--tw-numeric-fraction": " "
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".normal-nums": ***REMOVED***
                "font-variant-numeric": "normal"
        ***REMOVED***,
            ".ordinal": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-ordinal": "ordinal",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".slashed-zero": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-slashed-zero": "slashed-zero",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".lining-nums": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-numeric-figure": "lining-nums",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".oldstyle-nums": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-numeric-figure": "oldstyle-nums",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".proportional-nums": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-numeric-spacing": "proportional-nums",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".tabular-nums": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-numeric-spacing": "tabular-nums",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".diagonal-fractions": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-numeric-fraction": "diagonal-fractions",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***,
            ".stacked-fractions": ***REMOVED***
                "@defaults font-variant-numeric": ***REMOVED******REMOVED***,
                "--tw-numeric-fraction": "stacked-fractions",
                "font-variant-numeric": cssFontVariantNumericValue
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    lineHeight: (0, _createUtilityPlugin).default("lineHeight", [
        [
            "leading",
            [
                "lineHeight"
            ]
        ]
    ]),
    letterSpacing: (0, _createUtilityPlugin).default("letterSpacing", [
        [
            "tracking",
            [
                "letterSpacing"
            ]
        ]
    ], ***REMOVED***
        supportsNegativeValues: true
***REMOVED***),
    textColor: (***REMOVED*** matchUtilities , theme , corePlugins: corePlugins4***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            text: (value)=>***REMOVED***
                if (!corePlugins4("textOpacity")) ***REMOVED***
                    return ***REMOVED***
                        color: (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "color",
                    variable: "--tw-text-opacity"
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("textColor")),
            type: "color"
    ***REMOVED***);
***REMOVED***,
    textOpacity: (0, _createUtilityPlugin).default("textOpacity", [
        [
            "text-opacity",
            [
                "--tw-text-opacity"
            ]
        ]
    ]),
    textDecoration: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".underline": ***REMOVED***
                "text-decoration-line": "underline"
        ***REMOVED***,
            ".overline": ***REMOVED***
                "text-decoration-line": "overline"
        ***REMOVED***,
            ".line-through": ***REMOVED***
                "text-decoration-line": "line-through"
        ***REMOVED***,
            ".no-underline": ***REMOVED***
                "text-decoration-line": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    textDecorationColor: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            decoration: (value)=>***REMOVED***
                return ***REMOVED***
                    "text-decoration-color": (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("textDecorationColor")),
            type: [
                "color"
            ]
    ***REMOVED***);
***REMOVED***,
    textDecorationStyle: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".decoration-solid": ***REMOVED***
                "text-decoration-style": "solid"
        ***REMOVED***,
            ".decoration-double": ***REMOVED***
                "text-decoration-style": "double"
        ***REMOVED***,
            ".decoration-dotted": ***REMOVED***
                "text-decoration-style": "dotted"
        ***REMOVED***,
            ".decoration-dashed": ***REMOVED***
                "text-decoration-style": "dashed"
        ***REMOVED***,
            ".decoration-wavy": ***REMOVED***
                "text-decoration-style": "wavy"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    textDecorationThickness: (0, _createUtilityPlugin).default("textDecorationThickness", [
        [
            "decoration",
            [
                "text-decoration-thickness"
            ]
        ]
    ], ***REMOVED***
        type: [
            "length",
            "percentage"
        ]
***REMOVED***),
    textUnderlineOffset: (0, _createUtilityPlugin).default("textUnderlineOffset", [
        [
            "underline-offset",
            [
                "text-underline-offset"
            ]
        ]
    ], ***REMOVED***
        type: [
            "length",
            "percentage"
        ]
***REMOVED***),
    fontSmoothing: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".antialiased": ***REMOVED***
                "-webkit-font-smoothing": "antialiased",
                "-moz-osx-font-smoothing": "grayscale"
        ***REMOVED***,
            ".subpixel-antialiased": ***REMOVED***
                "-webkit-font-smoothing": "auto",
                "-moz-osx-font-smoothing": "auto"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    placeholderColor: (***REMOVED*** matchUtilities , theme , corePlugins: corePlugins5***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            placeholder: (value)=>***REMOVED***
                if (!corePlugins5("placeholderOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "&::placeholder": ***REMOVED***
                            color: (0, _toColorValue).default(value)
                    ***REMOVED***
                ***REMOVED***;
            ***REMOVED***
                return ***REMOVED***
                    "&::placeholder": (0, _withAlphaVariable).default(***REMOVED***
                        color: value,
                        property: "color",
                        variable: "--tw-placeholder-opacity"
                ***REMOVED***)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("placeholderColor")),
            type: [
                "color",
                "any"
            ]
    ***REMOVED***);
***REMOVED***,
    placeholderOpacity: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "placeholder-opacity": (value)=>***REMOVED***
                return ***REMOVED***
                    ["&::placeholder"]: ***REMOVED***
                        "--tw-placeholder-opacity": value
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("placeholderOpacity")
    ***REMOVED***);
***REMOVED***,
    caretColor: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            caret: (value)=>***REMOVED***
                return ***REMOVED***
                    "caret-color": (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("caretColor")),
            type: [
                "color",
                "any"
            ]
    ***REMOVED***);
***REMOVED***,
    accentColor: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            accent: (value)=>***REMOVED***
                return ***REMOVED***
                    "accent-color": (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("accentColor")),
            type: [
                "color",
                "any"
            ]
    ***REMOVED***);
***REMOVED***,
    opacity: (0, _createUtilityPlugin).default("opacity", [
        [
            "opacity",
            [
                "opacity"
            ]
        ]
    ]),
    backgroundBlendMode: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".bg-blend-normal": ***REMOVED***
                "background-blend-mode": "normal"
        ***REMOVED***,
            ".bg-blend-multiply": ***REMOVED***
                "background-blend-mode": "multiply"
        ***REMOVED***,
            ".bg-blend-screen": ***REMOVED***
                "background-blend-mode": "screen"
        ***REMOVED***,
            ".bg-blend-overlay": ***REMOVED***
                "background-blend-mode": "overlay"
        ***REMOVED***,
            ".bg-blend-darken": ***REMOVED***
                "background-blend-mode": "darken"
        ***REMOVED***,
            ".bg-blend-lighten": ***REMOVED***
                "background-blend-mode": "lighten"
        ***REMOVED***,
            ".bg-blend-color-dodge": ***REMOVED***
                "background-blend-mode": "color-dodge"
        ***REMOVED***,
            ".bg-blend-color-burn": ***REMOVED***
                "background-blend-mode": "color-burn"
        ***REMOVED***,
            ".bg-blend-hard-light": ***REMOVED***
                "background-blend-mode": "hard-light"
        ***REMOVED***,
            ".bg-blend-soft-light": ***REMOVED***
                "background-blend-mode": "soft-light"
        ***REMOVED***,
            ".bg-blend-difference": ***REMOVED***
                "background-blend-mode": "difference"
        ***REMOVED***,
            ".bg-blend-exclusion": ***REMOVED***
                "background-blend-mode": "exclusion"
        ***REMOVED***,
            ".bg-blend-hue": ***REMOVED***
                "background-blend-mode": "hue"
        ***REMOVED***,
            ".bg-blend-saturation": ***REMOVED***
                "background-blend-mode": "saturation"
        ***REMOVED***,
            ".bg-blend-color": ***REMOVED***
                "background-blend-mode": "color"
        ***REMOVED***,
            ".bg-blend-luminosity": ***REMOVED***
                "background-blend-mode": "luminosity"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    mixBlendMode: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".mix-blend-normal": ***REMOVED***
                "mix-blend-mode": "normal"
        ***REMOVED***,
            ".mix-blend-multiply": ***REMOVED***
                "mix-blend-mode": "multiply"
        ***REMOVED***,
            ".mix-blend-screen": ***REMOVED***
                "mix-blend-mode": "screen"
        ***REMOVED***,
            ".mix-blend-overlay": ***REMOVED***
                "mix-blend-mode": "overlay"
        ***REMOVED***,
            ".mix-blend-darken": ***REMOVED***
                "mix-blend-mode": "darken"
        ***REMOVED***,
            ".mix-blend-lighten": ***REMOVED***
                "mix-blend-mode": "lighten"
        ***REMOVED***,
            ".mix-blend-color-dodge": ***REMOVED***
                "mix-blend-mode": "color-dodge"
        ***REMOVED***,
            ".mix-blend-color-burn": ***REMOVED***
                "mix-blend-mode": "color-burn"
        ***REMOVED***,
            ".mix-blend-hard-light": ***REMOVED***
                "mix-blend-mode": "hard-light"
        ***REMOVED***,
            ".mix-blend-soft-light": ***REMOVED***
                "mix-blend-mode": "soft-light"
        ***REMOVED***,
            ".mix-blend-difference": ***REMOVED***
                "mix-blend-mode": "difference"
        ***REMOVED***,
            ".mix-blend-exclusion": ***REMOVED***
                "mix-blend-mode": "exclusion"
        ***REMOVED***,
            ".mix-blend-hue": ***REMOVED***
                "mix-blend-mode": "hue"
        ***REMOVED***,
            ".mix-blend-saturation": ***REMOVED***
                "mix-blend-mode": "saturation"
        ***REMOVED***,
            ".mix-blend-color": ***REMOVED***
                "mix-blend-mode": "color"
        ***REMOVED***,
            ".mix-blend-luminosity": ***REMOVED***
                "mix-blend-mode": "luminosity"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    boxShadow: (()=>***REMOVED***
        let transformValue = (0, _transformThemeValue).default("boxShadow");
        let defaultBoxShadow = [
            `var(--tw-ring-offset-shadow, 0 0 #0000)`,
            `var(--tw-ring-shadow, 0 0 #0000)`,
            `var(--tw-shadow)`, 
        ].join(", ");
        return function(***REMOVED*** matchUtilities , addDefaults , theme***REMOVED***) ***REMOVED***
            addDefaults(" box-shadow", ***REMOVED***
                "--tw-ring-offset-shadow": "0 0 #0000",
                "--tw-ring-shadow": "0 0 #0000",
                "--tw-shadow": "0 0 #0000",
                "--tw-shadow-colored": "0 0 #0000"
        ***REMOVED***);
            matchUtilities(***REMOVED***
                shadow: (value)=>***REMOVED***
                    value = transformValue(value);
                    let ast = (0, _parseBoxShadowValue).parseBoxShadowValue(value);
                    for (let shadow of ast)***REMOVED***
                        // Don't override color if the whole shadow is a variable
                        if (!shadow.valid) ***REMOVED***
                            continue;
                    ***REMOVED***
                        shadow.color = "var(--tw-shadow-color)";
                ***REMOVED***
                    return ***REMOVED***
                        "@defaults box-shadow": ***REMOVED******REMOVED***,
                        "--tw-shadow": value === "none" ? "0 0 #0000" : value,
                        "--tw-shadow-colored": value === "none" ? "0 0 #0000" : (0, _parseBoxShadowValue).formatBoxShadowValue(ast),
                        "box-shadow": defaultBoxShadow
                ***REMOVED***;
            ***REMOVED***
        ***REMOVED***, ***REMOVED***
                values: theme("boxShadow"),
                type: [
                    "shadow"
                ]
        ***REMOVED***);
    ***REMOVED***;
***REMOVED***)(),
    boxShadowColor: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            shadow: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-shadow-color": (0, _toColorValue).default(value),
                    "--tw-shadow": "var(--tw-shadow-colored)"
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("boxShadowColor")),
            type: [
                "color"
            ]
    ***REMOVED***);
***REMOVED***,
    outlineStyle: (***REMOVED*** addUtilities***REMOVED***)=>***REMOVED***
        addUtilities(***REMOVED***
            ".outline-none": ***REMOVED***
                outline: "2px solid transparent",
                "outline-offset": "2px"
        ***REMOVED***,
            ".outline": ***REMOVED***
                "outline-style": "solid"
        ***REMOVED***,
            ".outline-dashed": ***REMOVED***
                "outline-style": "dashed"
        ***REMOVED***,
            ".outline-dotted": ***REMOVED***
                "outline-style": "dotted"
        ***REMOVED***,
            ".outline-double": ***REMOVED***
                "outline-style": "double"
        ***REMOVED***,
            ".outline-hidden": ***REMOVED***
                "outline-style": "hidden"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    outlineWidth: (0, _createUtilityPlugin).default("outlineWidth", [
        [
            "outline",
            [
                "outline-width"
            ]
        ]
    ], ***REMOVED***
        type: [
            "length",
            "number",
            "percentage"
        ]
***REMOVED***),
    outlineOffset: (0, _createUtilityPlugin).default("outlineOffset", [
        [
            "outline-offset",
            [
                "outline-offset"
            ]
        ]
    ], ***REMOVED***
        type: [
            "length",
            "number",
            "percentage"
        ]
***REMOVED***),
    outlineColor: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            outline: (value)=>***REMOVED***
                return ***REMOVED***
                    "outline-color": (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("outlineColor")),
            type: [
                "color"
            ]
    ***REMOVED***);
***REMOVED***,
    ringWidth: (***REMOVED*** matchUtilities , addDefaults , addUtilities , theme***REMOVED***)=>***REMOVED***
        let ringOpacityDefault = theme("ringOpacity.DEFAULT", "0.5");
        let ringColorDefault = (0, _withAlphaVariable).withAlphaValue(/*
      theme('ringColor')?.DEFAULT,
      */ theme("ringColor.DEFAULT"), ringOpacityDefault, `rgb(147 197 253 / $***REMOVED***ringOpacityDefault***REMOVED***)`);
        addDefaults("ring-width", ***REMOVED***
            "--tw-ring-inset": " ",
            "--tw-ring-offset-width": theme("ringOffsetWidth.DEFAULT", "0px"),
            "--tw-ring-offset-color": theme("ringOffsetColor.DEFAULT", "#fff"),
            "--tw-ring-color": ringColorDefault,
            "--tw-ring-offset-shadow": "0 0 #0000",
            "--tw-ring-shadow": "0 0 #0000",
            "--tw-shadow": "0 0 #0000",
            "--tw-shadow-colored": "0 0 #0000"
    ***REMOVED***);
        matchUtilities(***REMOVED***
            ring: (value)=>***REMOVED***
                return ***REMOVED***
                    "@defaults ring-width": ***REMOVED******REMOVED***,
                    "--tw-ring-offset-shadow": `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,
                    "--tw-ring-shadow": `var(--tw-ring-inset) 0 0 0 calc($***REMOVED***value***REMOVED*** + var(--tw-ring-offset-width)) var(--tw-ring-color)`,
                    "box-shadow": [
                        `var(--tw-ring-offset-shadow)`,
                        `var(--tw-ring-shadow)`,
                        `var(--tw-shadow, 0 0 #0000)`, 
                    ].join(", ")
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("ringWidth"),
            type: "length"
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".ring-inset": ***REMOVED***
                "@defaults ring-width": ***REMOVED******REMOVED***,
                "--tw-ring-inset": "inset"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    ringColor: (***REMOVED*** matchUtilities , theme , corePlugins: corePlugins6***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            ring: (value)=>***REMOVED***
                if (!corePlugins6("ringOpacity")) ***REMOVED***
                    return ***REMOVED***
                        "--tw-ring-color": (0, _toColorValue).default(value)
                ***REMOVED***;
            ***REMOVED***
                return (0, _withAlphaVariable).default(***REMOVED***
                    color: value,
                    property: "--tw-ring-color",
                    variable: "--tw-ring-opacity"
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: Object.fromEntries(Object.entries((0, _flattenColorPalette).default(theme("ringColor"))).filter(([modifier])=>modifier !== "DEFAULT"
            )),
            type: "color"
    ***REMOVED***);
***REMOVED***,
    ringOpacity: (0, _createUtilityPlugin).default("ringOpacity", [
        [
            "ring-opacity",
            [
                "--tw-ring-opacity"
            ]
        ]
    ], ***REMOVED***
        filterDefault: true
***REMOVED***),
    ringOffsetWidth: (0, _createUtilityPlugin).default("ringOffsetWidth", [
        [
            "ring-offset",
            [
                "--tw-ring-offset-width"
            ]
        ]
    ], ***REMOVED***
        type: "length"
***REMOVED***),
    ringOffsetColor: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "ring-offset": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-ring-offset-color": (0, _toColorValue).default(value)
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: (0, _flattenColorPalette).default(theme("ringOffsetColor")),
            type: "color"
    ***REMOVED***);
***REMOVED***,
    blur: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            blur: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-blur": `blur($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("blur")
    ***REMOVED***);
***REMOVED***,
    brightness: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            brightness: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-brightness": `brightness($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("brightness")
    ***REMOVED***);
***REMOVED***,
    contrast: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            contrast: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-contrast": `contrast($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("contrast")
    ***REMOVED***);
***REMOVED***,
    dropShadow: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "drop-shadow": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-drop-shadow": Array.isArray(value) ? value.map((v)=>`drop-shadow($***REMOVED***v***REMOVED***)`
                    ).join(" ") : `drop-shadow($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("dropShadow")
    ***REMOVED***);
***REMOVED***,
    grayscale: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            grayscale: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-grayscale": `grayscale($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("grayscale")
    ***REMOVED***);
***REMOVED***,
    hueRotate: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "hue-rotate": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-hue-rotate": `hue-rotate($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("hueRotate"),
            supportsNegativeValues: true
    ***REMOVED***);
***REMOVED***,
    invert: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            invert: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-invert": `invert($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("invert")
    ***REMOVED***);
***REMOVED***,
    saturate: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            saturate: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-saturate": `saturate($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("saturate")
    ***REMOVED***);
***REMOVED***,
    sepia: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            sepia: (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-sepia": `sepia($***REMOVED***value***REMOVED***)`,
                    "@defaults filter": ***REMOVED******REMOVED***,
                    filter: cssFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("sepia")
    ***REMOVED***);
***REMOVED***,
    filter: (***REMOVED*** addDefaults , addUtilities***REMOVED***)=>***REMOVED***
        addDefaults("filter", ***REMOVED***
            "--tw-blur": " ",
            "--tw-brightness": " ",
            "--tw-contrast": " ",
            "--tw-grayscale": " ",
            "--tw-hue-rotate": " ",
            "--tw-invert": " ",
            "--tw-saturate": " ",
            "--tw-sepia": " ",
            "--tw-drop-shadow": " "
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".filter": ***REMOVED***
                "@defaults filter": ***REMOVED******REMOVED***,
                filter: cssFilterValue
        ***REMOVED***,
            ".filter-none": ***REMOVED***
                filter: "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    backdropBlur: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-blur": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-blur": `blur($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropBlur")
    ***REMOVED***);
***REMOVED***,
    backdropBrightness: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-brightness": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-brightness": `brightness($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropBrightness")
    ***REMOVED***);
***REMOVED***,
    backdropContrast: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-contrast": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-contrast": `contrast($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropContrast")
    ***REMOVED***);
***REMOVED***,
    backdropGrayscale: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-grayscale": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-grayscale": `grayscale($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropGrayscale")
    ***REMOVED***);
***REMOVED***,
    backdropHueRotate: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-hue-rotate": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-hue-rotate": `hue-rotate($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropHueRotate"),
            supportsNegativeValues: true
    ***REMOVED***);
***REMOVED***,
    backdropInvert: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-invert": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-invert": `invert($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropInvert")
    ***REMOVED***);
***REMOVED***,
    backdropOpacity: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-opacity": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-opacity": `opacity($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropOpacity")
    ***REMOVED***);
***REMOVED***,
    backdropSaturate: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-saturate": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-saturate": `saturate($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropSaturate")
    ***REMOVED***);
***REMOVED***,
    backdropSepia: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        matchUtilities(***REMOVED***
            "backdrop-sepia": (value)=>***REMOVED***
                return ***REMOVED***
                    "--tw-backdrop-sepia": `sepia($***REMOVED***value***REMOVED***)`,
                    "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                    "backdrop-filter": cssBackdropFilterValue
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("backdropSepia")
    ***REMOVED***);
***REMOVED***,
    backdropFilter: (***REMOVED*** addDefaults , addUtilities***REMOVED***)=>***REMOVED***
        addDefaults("backdrop-filter", ***REMOVED***
            "--tw-backdrop-blur": " ",
            "--tw-backdrop-brightness": " ",
            "--tw-backdrop-contrast": " ",
            "--tw-backdrop-grayscale": " ",
            "--tw-backdrop-hue-rotate": " ",
            "--tw-backdrop-invert": " ",
            "--tw-backdrop-opacity": " ",
            "--tw-backdrop-saturate": " ",
            "--tw-backdrop-sepia": " "
    ***REMOVED***);
        addUtilities(***REMOVED***
            ".backdrop-filter": ***REMOVED***
                "@defaults backdrop-filter": ***REMOVED******REMOVED***,
                "backdrop-filter": cssBackdropFilterValue
        ***REMOVED***,
            ".backdrop-filter-none": ***REMOVED***
                "backdrop-filter": "none"
        ***REMOVED***
    ***REMOVED***);
***REMOVED***,
    transitionProperty: (***REMOVED*** matchUtilities , theme***REMOVED***)=>***REMOVED***
        let defaultTimingFunction = theme("transitionTimingFunction.DEFAULT");
        let defaultDuration = theme("transitionDuration.DEFAULT");
        matchUtilities(***REMOVED***
            transition: (value)=>***REMOVED***
                return ***REMOVED***
                    "transition-property": value,
                    ...value === "none" ? ***REMOVED******REMOVED*** : ***REMOVED***
                        "transition-timing-function": defaultTimingFunction,
                        "transition-duration": defaultDuration
                ***REMOVED***
            ***REMOVED***;
        ***REMOVED***
    ***REMOVED***, ***REMOVED***
            values: theme("transitionProperty")
    ***REMOVED***);
***REMOVED***,
    transitionDelay: (0, _createUtilityPlugin).default("transitionDelay", [
        [
            "delay",
            [
                "transitionDelay"
            ]
        ]
    ]),
    transitionDuration: (0, _createUtilityPlugin).default("transitionDuration", [
        [
            "duration",
            [
                "transitionDuration"
            ]
        ]
    ], ***REMOVED***
        filterDefault: true
***REMOVED***),
    transitionTimingFunction: (0, _createUtilityPlugin).default("transitionTimingFunction", [
        [
            "ease",
            [
                "transitionTimingFunction"
            ]
        ]
    ], ***REMOVED***
        filterDefault: true
***REMOVED***),
    willChange: (0, _createUtilityPlugin).default("willChange", [
        [
            "will-change",
            [
                "will-change"
            ]
        ]
    ]),
    content: (0, _createUtilityPlugin).default("content", [
        [
            "content",
            [
                "--tw-content",
                [
                    "content",
                    "var(--tw-content)"
                ]
            ]
        ], 
    ])
***REMOVED***;
exports.corePlugins = corePlugins;
