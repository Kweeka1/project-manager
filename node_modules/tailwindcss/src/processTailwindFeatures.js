import normalizeTailwindDirectives from './lib/normalizeTailwindDirectives'
import expandTailwindAtRules from './lib/expandTailwindAtRules'
import expandApplyAtRules from './lib/expandApplyAtRules'
import evaluateTailwindFunctions from './lib/evaluateTailwindFunctions'
import substituteScreenAtRules from './lib/substituteScreenAtRules'
import resolveDefaultsAtRules from './lib/resolveDefaultsAtRules'
import collapseAdjacentRules from './lib/collapseAdjacentRules'
import collapseDuplicateDeclarations from './lib/collapseDuplicateDeclarations'
import partitionApplyAtRules from './lib/partitionApplyAtRules'
import detectNesting from './lib/detectNesting'
import ***REMOVED*** createContext ***REMOVED*** from './lib/setupContextUtils'
import ***REMOVED*** issueFlagNotices ***REMOVED*** from './featureFlags'

export default function processTailwindFeatures(setupContext) ***REMOVED***
  return function (root, result) ***REMOVED***
    let ***REMOVED*** tailwindDirectives, applyDirectives ***REMOVED*** = normalizeTailwindDirectives(root)

    detectNesting()(root, result)

    // Partition apply rules that are found in the css
    // itself.
    partitionApplyAtRules()(root, result)

    let context = setupContext(***REMOVED***
      tailwindDirectives,
      applyDirectives,
      registerDependency(dependency) ***REMOVED***
        result.messages.push(***REMOVED***
          plugin: 'tailwindcss',
          parent: result.opts.from,
          ...dependency,
    ***REMOVED***)
  ***REMOVED***,
      createContext(tailwindConfig, changedContent) ***REMOVED***
        return createContext(tailwindConfig, changedContent, root)
  ***REMOVED***,
***REMOVED***)(root, result)

    if (context.tailwindConfig.separator === '-') ***REMOVED***
      throw new Error(
        "The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead."
      )
***REMOVED***

    issueFlagNotices(context.tailwindConfig)

    expandTailwindAtRules(context)(root, result)
    // Partition apply rules that are generated by
    // addComponents, addUtilities and so on.
    partitionApplyAtRules()(root, result)
    expandApplyAtRules(context)(root, result)
    evaluateTailwindFunctions(context)(root, result)
    substituteScreenAtRules(context)(root, result)
    resolveDefaultsAtRules(context)(root, result)
    collapseAdjacentRules(context)(root, result)
    collapseDuplicateDeclarations(context)(root, result)
***REMOVED***
***REMOVED***
