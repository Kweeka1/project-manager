var fs = require('fs');
var path = require('path');
var pify = require('pify');

var stat = pify(fs.stat);
var readFile = pify(fs.readFile);
var resolve = path.resolve;

var cache = Object.create(null);

function convert(content, encoding) ***REMOVED***
	if (Buffer.isEncoding(encoding)) ***REMOVED***
		return content.toString(encoding);
	***REMOVED***
	return content;
***REMOVED***

module.exports = function (path, encoding) ***REMOVED***
	path = resolve(path);

	return stat(path).then(function (stats) ***REMOVED***
		var item = cache[path];

		if (item && item.mtime.getTime() === stats.mtime.getTime()) ***REMOVED***
			return convert(item.content, encoding);
		***REMOVED***

		return readFile(path).then(function (data) ***REMOVED***
			cache[path] = ***REMOVED***
				mtime: stats.mtime,
				content: data
			***REMOVED***;

			return convert(data, encoding);
		***REMOVED***);
	***REMOVED***).catch(function (err) ***REMOVED***
		cache[path] = null;
		return Promise.reject(err);
	***REMOVED***);
***REMOVED***;

module.exports.sync = function (path, encoding) ***REMOVED***
	path = resolve(path);

	try ***REMOVED***
		var stats = fs.statSync(path);
		var item = cache[path];

		if (item && item.mtime.getTime() === stats.mtime.getTime()) ***REMOVED***
			return convert(item.content, encoding);
		***REMOVED***

		var data = fs.readFileSync(path);

		cache[path] = ***REMOVED***
			mtime: stats.mtime,
			content: data
		***REMOVED***;

		return convert(data, encoding);
	***REMOVED*** catch (err) ***REMOVED***
		cache[path] = null;
		throw err;
	***REMOVED***

***REMOVED***;

module.exports.get = function (path, encoding) ***REMOVED***
	path = resolve(path);
	if (cache[path]) ***REMOVED***
		return convert(cache[path].content, encoding);
	***REMOVED***
	return null;
***REMOVED***;

module.exports.clear = function () ***REMOVED***
	cache = Object.create(null);
***REMOVED***;
