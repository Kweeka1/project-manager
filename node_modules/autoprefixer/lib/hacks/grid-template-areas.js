let Declaration = require('../declaration')
let ***REMOVED***
  parseGridAreas,
  warnMissedAreas,
  prefixTrackProp,
  prefixTrackValue,
  getGridGap,
  warnGridGap,
  inheritGridGap
***REMOVED*** = require('./grid-utils')

function getGridRows(tpl) ***REMOVED***
  return tpl
    .trim()
    .slice(1, -1)
    .split(/["']\s*["']?/g)
***REMOVED***

class GridTemplateAreas extends Declaration ***REMOVED***
  /**
   * Translate grid-template-areas to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) ***REMOVED***
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let hasColumns = false
    let hasRows = false
    let parent = decl.parent
    let gap = getGridGap(decl)
    gap = inheritGridGap(decl, gap) || gap

    // remove already prefixed rows
    // to prevent doubling prefixes
    parent.walkDecls(/-ms-grid-rows/, i => i.remove())

    // add empty tracks to rows
    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => ***REMOVED***
      if (trackDecl.prop === 'grid-template-rows') ***REMOVED***
        hasRows = true
        let ***REMOVED*** prop, value ***REMOVED*** = trackDecl
        trackDecl.cloneBefore(***REMOVED***
          prop: prefixTrackProp(***REMOVED*** prop, prefix ***REMOVED***),
          value: prefixTrackValue(***REMOVED*** value, gap: gap.row ***REMOVED***)
    ***REMOVED***)
  ***REMOVED*** else ***REMOVED***
        hasColumns = true
  ***REMOVED***
***REMOVED***)

    let gridRows = getGridRows(decl.value)

    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) ***REMOVED***
      decl.cloneBefore(***REMOVED***
        prop: '-ms-grid-rows',
        value: prefixTrackValue(***REMOVED***
          value: `repeat($***REMOVED***gridRows.length***REMOVED***, auto)`,
          gap: gap.row
    ***REMOVED***),
        raws: ***REMOVED******REMOVED***
  ***REMOVED***)
***REMOVED***

    // warnings
    warnGridGap(***REMOVED***
      gap,
      hasColumns,
      decl,
      result
***REMOVED***)

    let areas = parseGridAreas(***REMOVED***
      rows: gridRows,
      gap
***REMOVED***)

    warnMissedAreas(areas, decl, result)

    return decl
***REMOVED***
***REMOVED***

GridTemplateAreas.names = ['grid-template-areas']

module.exports = GridTemplateAreas
