let Declaration = require('../declaration')

class WritingMode extends Declaration ***REMOVED***
  insert(decl, prefix, prefixes) ***REMOVED***
    if (prefix === '-ms-') ***REMOVED***
      let cloned = this.set(this.clone(decl), prefix)

      if (this.needCascade(decl)) ***REMOVED***
        cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
  ***REMOVED***
      let direction = 'ltr'

      decl.parent.nodes.forEach(i => ***REMOVED***
        if (i.prop === 'direction') ***REMOVED***
          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value
    ***REMOVED***
  ***REMOVED***)

      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value
      return decl.parent.insertBefore(decl, cloned)
***REMOVED***

    return super.insert(decl, prefix, prefixes)
***REMOVED***
***REMOVED***

WritingMode.names = ['writing-mode']

WritingMode.msValues = ***REMOVED***
  ltr: ***REMOVED***
    'horizontal-tb': 'lr-tb',
    'vertical-rl': 'tb-rl',
    'vertical-lr': 'tb-lr'
***REMOVED***
  rtl: ***REMOVED***
    'horizontal-tb': 'rl-tb',
    'vertical-rl': 'bt-rl',
    'vertical-lr': 'bt-lr'
***REMOVED***
***REMOVED***

module.exports = WritingMode
