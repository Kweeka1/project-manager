let Declaration = require('../declaration')
let ***REMOVED***
  parseTemplate,
  warnMissedAreas,
  getGridGap,
  warnGridGap,
  inheritGridGap
***REMOVED*** = require('./grid-utils')

class GridTemplate extends Declaration ***REMOVED***
  /**
   * Translate grid-template to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) ***REMOVED***
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    if (decl.parent.some(i => i.prop === '-ms-grid-rows')) ***REMOVED***
      return undefined
***REMOVED***

    let gap = getGridGap(decl)

    /**
     * we must insert inherited gap values in some cases:
     * if we are inside media query && if we have no grid-gap value
     */
    let inheritedGap = inheritGridGap(decl, gap)

    let ***REMOVED*** rows, columns, areas ***REMOVED*** = parseTemplate(***REMOVED***
      decl,
      gap: inheritedGap || gap
***REMOVED***)

    let hasAreas = Object.keys(areas).length > 0
    let hasRows = Boolean(rows)
    let hasColumns = Boolean(columns)

    warnGridGap(***REMOVED***
      gap,
      hasColumns,
      decl,
      result
***REMOVED***)

    warnMissedAreas(areas, decl, result)

    if ((hasRows && hasColumns) || hasAreas) ***REMOVED***
      decl.cloneBefore(***REMOVED***
        prop: '-ms-grid-rows',
        value: rows,
        raws: ***REMOVED******REMOVED***
  ***REMOVED***)
***REMOVED***

    if (hasColumns) ***REMOVED***
      decl.cloneBefore(***REMOVED***
        prop: '-ms-grid-columns',
        value: columns,
        raws: ***REMOVED******REMOVED***
  ***REMOVED***)
***REMOVED***

    return decl
***REMOVED***
***REMOVED***

GridTemplate.names = ['grid-template']

module.exports = GridTemplate
