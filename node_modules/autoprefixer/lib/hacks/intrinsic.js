let OldValue = require('../old-value')
let Value = require('../value')

function regexp(name) ***REMOVED***
  return new RegExp(`(^|[\\s,(])($***REMOVED***name***REMOVED***($|[\\s),]))`, 'gi')
***REMOVED***

class Intrinsic extends Value ***REMOVED***
  regexp() ***REMOVED***
    if (!this.regexpCache) this.regexpCache = regexp(this.name)
    return this.regexpCache
***REMOVED***

  isStretch() ***REMOVED***
    return (
      this.name === 'stretch' ||
      this.name === 'fill' ||
      this.name === 'fill-available'
    )
***REMOVED***

  replace(string, prefix) ***REMOVED***
    if (prefix === '-moz-' && this.isStretch()) ***REMOVED***
      return string.replace(this.regexp(), '$1-moz-available$3')
***REMOVED***
    if (prefix === '-webkit-' && this.isStretch()) ***REMOVED***
      return string.replace(this.regexp(), '$1-webkit-fill-available$3')
***REMOVED***
    return super.replace(string, prefix)
***REMOVED***

  old(prefix) ***REMOVED***
    let prefixed = prefix + this.name
    if (this.isStretch()) ***REMOVED***
      if (prefix === '-moz-') ***REMOVED***
        prefixed = '-moz-available'
  ***REMOVED*** else if (prefix === '-webkit-') ***REMOVED***
        prefixed = '-webkit-fill-available'
  ***REMOVED***
***REMOVED***
    return new OldValue(this.name, prefixed, prefixed, regexp(prefixed))
***REMOVED***

  add(decl, prefix) ***REMOVED***
    if (decl.prop.includes('grid') && prefix !== '-webkit-') ***REMOVED***
      return undefined
***REMOVED***
    return super.add(decl, prefix)
***REMOVED***
***REMOVED***

Intrinsic.names = [
  'max-content',
  'min-content',
  'fit-content',
  'fill',
  'fill-available',
  'stretch'
]

module.exports = Intrinsic
