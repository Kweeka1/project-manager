let Prefixer = require('./prefixer')

class AtRule extends Prefixer ***REMOVED***
  /**
   * Clone and add prefixes for at-rule
   */
  add(rule, prefix) ***REMOVED***
    let prefixed = prefix + rule.name

    let already = rule.parent.some(
      i => i.name === prefixed && i.params === rule.params
    )
    if (already) ***REMOVED***
      return undefined
***REMOVED***

    let cloned = this.clone(rule, ***REMOVED*** name: prefixed ***REMOVED***)
    return rule.parent.insertBefore(rule, cloned)
***REMOVED***

  /**
   * Clone node with prefixes
   */
  process(node) ***REMOVED***
    let parent = this.parentPrefix(node)

    for (let prefix of this.prefixes) ***REMOVED***
      if (!parent || parent === prefix) ***REMOVED***
        this.add(node, prefix)
  ***REMOVED***
***REMOVED***
***REMOVED***
***REMOVED***

module.exports = AtRule
