'use strict'

const browsers = require('./browsers').browsers
const versions = require('./browserVersions').browserVersions
const agentsData = require('../../data/agents')

function unpackBrowserVersions(versionsData) ***REMOVED***
  return Object.keys(versionsData).reduce((usage, version) => ***REMOVED***
    usage[versions[version]] = versionsData[version]
    return usage
***REMOVED*** ***REMOVED******REMOVED***)
***REMOVED***

module.exports.agents = Object.keys(agentsData).reduce((map, key) => ***REMOVED***
  let versionsData = agentsData[key]
  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => ***REMOVED***
    if (entry === 'A') ***REMOVED***
      data.usage_global = unpackBrowserVersions(versionsData[entry])
***REMOVED*** else if (entry === 'C') ***REMOVED***
      data.versions = versionsData[entry].reduce((list, version) => ***REMOVED***
        if (version === '') ***REMOVED***
          list.push(null)
    ***REMOVED*** else ***REMOVED***
          list.push(versions[version])
    ***REMOVED***
        return list
  ***REMOVED***, [])
***REMOVED*** else if (entry === 'D') ***REMOVED***
      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])
***REMOVED*** else if (entry === 'E') ***REMOVED***
      data.browser = versionsData[entry]
***REMOVED*** else if (entry === 'F') ***REMOVED***
      data.release_date = Object.keys(versionsData[entry]).reduce(
        (map2, key2) => ***REMOVED***
          map2[versions[key2]] = versionsData[entry][key2]
          return map2
    ***REMOVED***,
        ***REMOVED******REMOVED***
      )
***REMOVED*** else ***REMOVED***
      // entry is B
      data.prefix = versionsData[entry]
***REMOVED***
    return data
***REMOVED*** ***REMOVED******REMOVED***)
  return map
***REMOVED***, ***REMOVED******REMOVED***)
