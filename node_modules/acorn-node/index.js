var acorn = require('acorn')
var xtend = require('xtend')

var CJSParser = acorn.Parser
  .extend(require('./lib/bigint'))
  .extend(require('./lib/class-fields'))
  .extend(require('./lib/static-class-features'))
  .extend(require('./lib/numeric-separator'))
  .extend(require('./lib/dynamic-import').default)
var ESModulesParser = CJSParser
  .extend(require('./lib/export-ns-from'))
  .extend(require('./lib/import-meta'))

function mapOptions (opts) ***REMOVED***
  if (!opts) opts = ***REMOVED******REMOVED***
  return xtend(***REMOVED***
    ecmaVersion: 2020,
    allowHashBang: true,
    allowReturnOutsideFunction: true
***REMOVED*** opts)
***REMOVED***

function getParser (opts) ***REMOVED***
  if (!opts) opts = ***REMOVED******REMOVED***
  return opts.sourceType === 'module' ? ESModulesParser : CJSParser
***REMOVED***

module.exports = exports = xtend(acorn, ***REMOVED***
  parse: function parse (src, opts) ***REMOVED***
    return getParser(opts).parse(src, mapOptions(opts))
***REMOVED***
  parseExpressionAt: function parseExpressionAt (src, offset, opts) ***REMOVED***
    return getParser(opts).parseExpressionAt(src, offset, mapOptions(opts))
***REMOVED***
  tokenizer: function tokenizer (src, opts) ***REMOVED***
    return getParser(opts).tokenizer(src, mapOptions(opts))
***REMOVED***
***REMOVED***)
