"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
const utils = require("../../utils");
class Matcher ***REMOVED***
    constructor(_patterns, _settings, _micromatchOptions) ***REMOVED***
        this._patterns = _patterns;
        this._settings = _settings;
        this._micromatchOptions = _micromatchOptions;
        this._storage = [];
        this._fillStorage();
***REMOVED***
    _fillStorage() ***REMOVED***
        /**
         * The original pattern may include `***REMOVED***,*,**,a/****REMOVED***`, which will lead to problems with matching (unresolved level).
         * So, before expand patterns with brace expansion into separated patterns.
         */
        const patterns = utils.pattern.expandPatternsWithBraceExpansion(this._patterns);
        for (const pattern of patterns) ***REMOVED***
            const segments = this._getPatternSegments(pattern);
            const sections = this._splitSegmentsIntoSections(segments);
            this._storage.push(***REMOVED***
                complete: sections.length <= 1,
                pattern,
                segments,
                sections
        ***REMOVED***);
    ***REMOVED***
***REMOVED***
    _getPatternSegments(pattern) ***REMOVED***
        const parts = utils.pattern.getPatternParts(pattern, this._micromatchOptions);
        return parts.map((part) => ***REMOVED***
            const dynamic = utils.pattern.isDynamicPattern(part, this._settings);
            if (!dynamic) ***REMOVED***
                return ***REMOVED***
                    dynamic: false,
                    pattern: part
            ***REMOVED***;
        ***REMOVED***
            return ***REMOVED***
                dynamic: true,
                pattern: part,
                patternRe: utils.pattern.makeRe(part, this._micromatchOptions)
        ***REMOVED***;
    ***REMOVED***);
***REMOVED***
    _splitSegmentsIntoSections(segments) ***REMOVED***
        return utils.array.splitWhen(segments, (segment) => segment.dynamic && utils.pattern.hasGlobStar(segment.pattern));
***REMOVED***
***REMOVED***
exports.default = Matcher;
