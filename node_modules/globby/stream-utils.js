import ***REMOVED***Transform***REMOVED*** from 'node:stream';

class ObjectTransform extends Transform ***REMOVED***
	constructor() ***REMOVED***
		super(***REMOVED***
			objectMode: true,
		***REMOVED***);
	***REMOVED***
***REMOVED***

export class FilterStream extends ObjectTransform ***REMOVED***
	constructor(filter) ***REMOVED***
		super();
		this._filter = filter;
	***REMOVED***

	_transform(data, encoding, callback) ***REMOVED***
		if (this._filter(data)) ***REMOVED***
			this.push(data);
		***REMOVED***

		callback();
	***REMOVED***
***REMOVED***

export class UniqueStream extends ObjectTransform ***REMOVED***
	constructor() ***REMOVED***
		super();
		this._pushed = new Set();
	***REMOVED***

	_transform(data, encoding, callback) ***REMOVED***
		if (!this._pushed.has(data)) ***REMOVED***
			this.push(data);
			this._pushed.add(data);
		***REMOVED***

		callback();
	***REMOVED***
***REMOVED***
